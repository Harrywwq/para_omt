; 
(set-info :status unknown)
(declare-fun node_0x7ffff173ed40 () (_ BitVec 1))
(declare-fun ccso_node_0x7ffff174aa10 () (_ BitVec 32))
(declare-fun ine_0x7ffff174b150 () (_ BitVec 1))
(declare-fun carg_node_0x7ffff173e270 () (_ BitVec 64))
(declare-fun carg_node_0x7ffff06e1b40_CS0x414ef18 () (_ BitVec 64))
(declare-fun carg_node_0x7ffff173e3f0 () (_ BitVec 64))
(declare-fun carg_node_0x7ffff06e1ce0_CS0x414ef18 () (_ BitVec 64))
(declare-fun node_0x7ffff174a440 () (_ BitVec 64))
(declare-fun carg_node_0x7ffff06e1940_CS0x414ef18 () (_ BitVec 64))
(declare-fun fsub_0x7ffff174a5e0 () (_ BitVec 64))
(declare-fun fmul_0x7ffff174a210 () (_ BitVec 64))
(declare-fun node_0x7ffff1740d40 () (_ BitVec 64))
(declare-fun node_0x7ffff17409d0 () (_ BitVec 64))
(declare-fun node_0x7ffff174a070 () (_ BitVec 64))
(declare-fun node_0x7ffff1749ca0 () (_ BitVec 64))
(declare-fun fadd_0x7ffff1749e40 () (_ BitVec 64))
(declare-fun fmul_0x7ffff1749a70 () (_ BitVec 64))
(declare-fun node_0x7ffff17498d0 () (_ BitVec 64))
(declare-fun fmul_0x7ffff1740b50 () (_ BitVec 64))
(declare-fun carg_node_0x7ffff173df70 () (_ BitVec 64))
(declare-fun node_0x7ffff1749540 () (_ BitVec 64))
(declare-fun fmul_0x7ffff17496e0 () (_ BitVec 64))
(declare-fun node_0x7ffff1745d50 () (_ BitVec 64))
(declare-fun fsub_0x7ffff1745ef0 () (_ BitVec 64))
(declare-fun carg_node_0x7ffff173da30 () (_ BitVec 64))
(declare-fun node_0x7ffff17458e0 () (_ BitVec 64))
(declare-fun LdMem_0x7ffff1745a80 () (_ BitVec 64))
(declare-fun pcso_node_0x11feeda0 () (_ BitVec 64))
(declare-fun StMem_0x11feef50 () (_ BitVec 64))
(declare-fun R0x7ffff173d490 () (_ BitVec 1))
(declare-fun node_0x7ffff1749170 () (_ BitVec 64))
(declare-fun fmul_0x7ffff1749310 () (_ BitVec 64))
(declare-fun fmul_0x7ffff1740ee0 () (_ BitVec 64))
(declare-fun carg_node_0x7ffff173e0f0 () (_ BitVec 64))
(declare-fun node_0x7ffff1748de0 () (_ BitVec 64))
(declare-fun fmul_0x7ffff1748f80 () (_ BitVec 64))
(declare-fun node_0x7ffff1745110 () (_ BitVec 64))
(declare-fun fsub_0x7ffff17452b0 () (_ BitVec 64))
(declare-fun carg_node_0x7ffff173d8d0 () (_ BitVec 64))
(declare-fun node_0x7ffff1744cc0 () (_ BitVec 64))
(declare-fun LdMem_0x7ffff1744e40 () (_ BitVec 64))
(declare-fun pcso_node_0x11fee9a0 () (_ BitVec 64))
(declare-fun StMem_0x11feeb80 () (_ BitVec 64))
(declare-fun node_0x7ffff1748a10 () (_ BitVec 64))
(declare-fun carg_node_0x7ffff06e17e0_CS0x414ef18 () (_ BitVec 64))
(declare-fun fmul_0x7ffff1748bb0 () (_ BitVec 64))
(declare-fun node_0x7ffff1748500 () (_ BitVec 64))
(declare-fun fadd_0x7ffff17486a0 () (_ BitVec 64))
(declare-fun fmul_0x7ffff17482d0 () (_ BitVec 64))
(declare-fun node_0x7ffff1748130 () (_ BitVec 64))
(declare-fun node_0x7ffff1747d60 () (_ BitVec 64))
(declare-fun fmul_0x7ffff1747f00 () (_ BitVec 64))
(declare-fun node_0x7ffff17478f0 () (_ BitVec 64))
(declare-fun LdMem_0x7ffff1742dd0 () (_ BitVec 64))
(declare-fun pcso_node_0x7b9afc0 () (_ BitVec 64))
(declare-fun StMem_0x7b8a3d0 () (_ BitVec 64))
(declare-fun node_0x7ffff1747120 () (_ BitVec 64))
(declare-fun fmul_0x7ffff17472c0 () (_ BitVec 64))
(declare-fun node_0x7ffff1746940 () (_ BitVec 64))
(declare-fun fmul_0x7ffff1746ef0 () (_ BitVec 64))
(declare-fun node_0x7ffff1746520 () (_ BitVec 64))
(declare-fun LdMem_0x7ffff1741570 () (_ BitVec 64))
(declare-fun pcso_node_0x7b94c10 () (_ BitVec 64))
(declare-fun StMem_0x7b88d60 () (_ BitVec 64))
(declare-fun node_0x7ffff17442b0 () (_ BitVec 64))
(declare-fun carg_node_0x7ffff06e1570_CS0x414ef18 () (_ BitVec 64))
(declare-fun fadd_0x7ffff1744450 () (_ BitVec 64))
(declare-fun fmul_0x7ffff1744080 () (_ BitVec 64))
(declare-fun node_0x7ffff1743d00 () (_ BitVec 64))
(declare-fun node_0x7ffff1743930 () (_ BitVec 64))
(declare-fun fmul_0x7ffff1743ad0 () (_ BitVec 64))
(declare-fun node_0x7ffff17434c0 () (_ BitVec 64))
(declare-fun node_0x7ffff1742c30 () (_ BitVec 64))
(declare-fun node_0x7ffff1742440 () (_ BitVec 64))
(declare-fun fmul_0x7ffff17425e0 () (_ BitVec 64))
(declare-fun node_0x7ffff1742070 () (_ BitVec 64))
(declare-fun fmul_0x7ffff1742210 () (_ BitVec 64))
(declare-fun node_0x7ffff1741c00 () (_ BitVec 64))
(declare-fun node_0x7ffff17413f0 () (_ BitVec 64))
(declare-fun return_node_0x7ffff06e1fc0_CS0x414ef18 () (_ BitVec 32))
(declare-fun node_0x11fef800 () (_ BitVec 64))
(declare-fun parg_node_0x107adc10_CS0x414d628 () (_ BitVec 64))
(declare-fun LdMem_0x11fed580 () (_ BitVec 64))
(declare-fun parg_node_0x11fed6c0 () (_ BitVec 64))
(declare-fun StMem_0x7b8f5e0 () (_ BitVec 64))
(declare-fun node_0x107af910_CS0x414d628 () (_ BitVec 64))
(declare-fun node_0x11fede20 () (_ BitVec 64))
(declare-fun parg_node_0x107ae020_CS0x414d628 () (_ BitVec 64))
(declare-fun LdMem_0x11fed7f0 () (_ BitVec 64))
(declare-fun parg_node_0x11fedb10 () (_ BitVec 64))
(declare-fun StMem_0x11fed960 () (_ BitVec 64))
(declare-fun node_0x107afe90_CS0x414d628 () (_ BitVec 64))
(declare-fun node_0x7b9e5d0 () (_ BitVec 64))
(declare-fun parg_node_0x107b5690_CS0x414c278 () (_ BitVec 64))
(declare-fun LdMem_0x11feca10 () (_ BitVec 64))
(declare-fun parg_node_0x11fecc60 () (_ BitVec 64))
(declare-fun StMem_0x11fecb50 () (_ BitVec 64))
(declare-fun node_0x107b7470_CS0x414c278 () (_ BitVec 64))
(declare-fun node_0x7b89b30 () (_ BitVec 64))
(declare-fun parg_node_0x107b5aa0_CS0x414c278 () (_ BitVec 64))
(declare-fun LdMem_0x7ba1be0 () (_ BitVec 64))
(declare-fun parg_node_0x7b87230 () (_ BitVec 64))
(declare-fun StMem_0x7ba51f0 () (_ BitVec 64))
(declare-fun node_0x107b7a50_CS0x414c278 () (_ BitVec 64))
(declare-fun carg_node_0x7ffff173e680 () (_ BitVec 64))
(assert
 (= node_0x7ffff173ed40 (_ bv1 1)))
(assert
 (let (($x104 (= ine_0x7ffff174b150 (ite (and (distinct ccso_node_0x7ffff174aa10 (_ bv0 32)) true) (_ bv1 1) (_ bv0 1)))))
 (and (= node_0x7ffff173ed40 ine_0x7ffff174b150) $x104)))
(assert
 (= carg_node_0x7ffff06e1b40_CS0x414ef18 carg_node_0x7ffff173e270))
(assert
 (= carg_node_0x7ffff06e1ce0_CS0x414ef18 carg_node_0x7ffff173e3f0))
(assert
 (= carg_node_0x7ffff06e1940_CS0x414ef18 node_0x7ffff174a440))
(assert
 (let (($x470 (= node_0x7ffff174a440 fsub_0x7ffff174a5e0)))
 (let (($x255 (or (or (= node_0x7ffff17409d0 (_ bv0 64)) (= node_0x7ffff1740d40 (_ bv0 64))) (and (distinct fmul_0x7ffff174a210 (_ bv0 64)) true))))
 (let (($x252 (= fmul_0x7ffff174a210 (bvmul node_0x7ffff17409d0 node_0x7ffff1740d40))))
 (let (($x256 (and $x252 $x255)))
 (let (($x564 (= node_0x7ffff174a070 fmul_0x7ffff174a210)))
 (let (($x123 (= fsub_0x7ffff174a5e0 (bvsub node_0x7ffff1749ca0 node_0x7ffff174a070))))
 (let (($x471 (= node_0x7ffff1749ca0 fadd_0x7ffff1749e40)))
 (let (($x497 (= node_0x7ffff17498d0 fmul_0x7ffff1749a70)))
 (let (($x244 (= carg_node_0x7ffff173df70 (_ bv0 64))))
 (let ((?x242 (bvmul carg_node_0x7ffff173df70 carg_node_0x7ffff173df70)))
 (let (($x243 (= fmul_0x7ffff1740b50 ?x242)))
 (let (($x248 (and $x243 (or (or $x244 $x244) (and (distinct fmul_0x7ffff1740b50 (_ bv0 64)) true)))))
 (let (($x563 (= node_0x7ffff17409d0 fmul_0x7ffff1740b50)))
 (let (($x211 (= node_0x7ffff17409d0 (_ bv0 64))))
 (let (($x210 (= node_0x7ffff1749540 (_ bv0 64))))
 (let (($x212 (or $x210 $x211)))
 (let ((?x208 (bvmul node_0x7ffff1749540 node_0x7ffff17409d0)))
 (let (($x215 (and (= fmul_0x7ffff1749a70 ?x208) (or $x212 (and (distinct fmul_0x7ffff1749a70 (_ bv0 64)) true)))))
 (let (($x523 (= node_0x7ffff1749540 fmul_0x7ffff17496e0)))
 (let (($x224 (or (or (= node_0x7ffff1745d50 (_ bv0 64)) (= node_0x7ffff1745d50 (_ bv0 64))) (and (distinct fmul_0x7ffff17496e0 (_ bv0 64)) true))))
 (let ((?x219 (bvmul node_0x7ffff1745d50 node_0x7ffff1745d50)))
 (let (($x225 (and (= fmul_0x7ffff17496e0 ?x219) $x224)))
 (let (($x511 (= node_0x7ffff1745d50 fsub_0x7ffff1745ef0)))
 (let (($x231 (= fsub_0x7ffff1745ef0 (bvsub node_0x7ffff17458e0 carg_node_0x7ffff173da30))))
 (let (($x526 (= node_0x7ffff17458e0 LdMem_0x7ffff1745a80)))
 (let (($x258 (= LdMem_0x7ffff1745a80 StMem_0x11feef50)))
 (let ((?x128 (bvadd node_0x7ffff1749170 node_0x7ffff17498d0)))
 (let (($x129 (= fadd_0x7ffff1749e40 ?x128)))
 (let (($x235 (= node_0x7ffff1749170 fmul_0x7ffff1749310)))
 (let (($x199 (= carg_node_0x7ffff173e0f0 (_ bv0 64))))
 (let ((?x197 (bvmul carg_node_0x7ffff173e0f0 carg_node_0x7ffff173e0f0)))
 (let (($x198 (= fmul_0x7ffff1740ee0 ?x197)))
 (let (($x203 (and $x198 (or (or $x199 $x199) (and (distinct fmul_0x7ffff1740ee0 (_ bv0 64)) true)))))
 (let (($x496 (= node_0x7ffff1740d40 fmul_0x7ffff1740ee0)))
 (let (($x140 (or (or (= node_0x7ffff1748de0 (_ bv0 64)) (= node_0x7ffff1740d40 (_ bv0 64))) (and (distinct fmul_0x7ffff1749310 (_ bv0 64)) true))))
 (let ((?x134 (bvmul node_0x7ffff1748de0 node_0x7ffff1740d40)))
 (let (($x135 (= fmul_0x7ffff1749310 ?x134)))
 (let (($x141 (and $x135 $x140)))
 (let (($x370 (= node_0x7ffff1748de0 fmul_0x7ffff1748f80)))
 (let (($x150 (or (or (= node_0x7ffff1745110 (_ bv0 64)) (= node_0x7ffff1745110 (_ bv0 64))) (and (distinct fmul_0x7ffff1748f80 (_ bv0 64)) true))))
 (let ((?x145 (bvmul node_0x7ffff1745110 node_0x7ffff1745110)))
 (let (($x151 (and (= fmul_0x7ffff1748f80 ?x145) $x150)))
 (let (($x112 (= node_0x7ffff1745110 fsub_0x7ffff17452b0)))
 (let (($x157 (= fsub_0x7ffff17452b0 (bvsub node_0x7ffff1744cc0 carg_node_0x7ffff173d8d0))))
 (let (($x301 (= node_0x7ffff1744cc0 LdMem_0x7ffff1744e40)))
 (let (($x115 (= LdMem_0x7ffff1744e40 StMem_0x11feeb80)))
 (and (or (not (= R0x7ffff173d490 (_ bv1 1))) $x115) $x115 (= StMem_0x11feeb80 pcso_node_0x11fee9a0) $x301 $x157 $x112 $x151 $x370 $x141 $x496 $x203 $x235 $x129 (or (not (= R0x7ffff173d490 (_ bv1 1))) $x258) $x258 (= StMem_0x11feef50 pcso_node_0x11feeda0) $x526 $x231 $x511 $x225 $x523 $x215 $x563 $x248 $x497 $x471 $x123 $x564 $x256 $x470))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (= carg_node_0x7ffff06e17e0_CS0x414ef18 node_0x7ffff1748a10))
(assert
 (let (($x380 (= node_0x7ffff1748a10 fmul_0x7ffff1748bb0)))
 (let (($x312 (or (or (= (_ bv2 64) (_ bv0 64)) (= node_0x7ffff1748500 (_ bv0 64))) (and (distinct fmul_0x7ffff1748bb0 (_ bv0 64)) true))))
 (let (($x313 (and (= fmul_0x7ffff1748bb0 (bvmul (_ bv2 64) node_0x7ffff1748500)) $x312)))
 (let (($x391 (= node_0x7ffff1748500 fadd_0x7ffff17486a0)))
 (let (($x261 (= node_0x7ffff1748130 fmul_0x7ffff17482d0)))
 (let (($x355 (or (or (= node_0x7ffff1747d60 (_ bv0 64)) (= node_0x7ffff17409d0 (_ bv0 64))) (and (distinct fmul_0x7ffff17482d0 (_ bv0 64)) true))))
 (let (($x351 (= fmul_0x7ffff17482d0 (bvmul node_0x7ffff1747d60 node_0x7ffff17409d0))))
 (let (($x356 (and $x351 $x355)))
 (let (($x389 (= node_0x7ffff1747d60 fmul_0x7ffff1747f00)))
 (let (($x365 (or (or (= node_0x7ffff17478f0 (_ bv0 64)) (= node_0x7ffff1745d50 (_ bv0 64))) (and (distinct fmul_0x7ffff1747f00 (_ bv0 64)) true))))
 (let (($x361 (= fmul_0x7ffff1747f00 (bvmul node_0x7ffff17478f0 node_0x7ffff1745d50))))
 (let (($x366 (and $x361 $x365)))
 (let (($x509 (= node_0x7ffff17478f0 LdMem_0x7ffff1742dd0)))
 (let (($x510 (= LdMem_0x7ffff1742dd0 StMem_0x7b8a3d0)))
 (let ((?x318 (bvadd node_0x7ffff1747120 node_0x7ffff1748130)))
 (let (($x319 (= fadd_0x7ffff17486a0 ?x318)))
 (let (($x98 (= node_0x7ffff1747120 fmul_0x7ffff17472c0)))
 (let (($x328 (or (or (= node_0x7ffff1746940 (_ bv0 64)) (= node_0x7ffff1740d40 (_ bv0 64))) (and (distinct fmul_0x7ffff17472c0 (_ bv0 64)) true))))
 (let (($x324 (= fmul_0x7ffff17472c0 (bvmul node_0x7ffff1746940 node_0x7ffff1740d40))))
 (let (($x329 (and $x324 $x328)))
 (let (($x539 (= node_0x7ffff1746940 fmul_0x7ffff1746ef0)))
 (let (($x338 (or (or (= node_0x7ffff1746520 (_ bv0 64)) (= node_0x7ffff1745110 (_ bv0 64))) (and (distinct fmul_0x7ffff1746ef0 (_ bv0 64)) true))))
 (let (($x334 (= fmul_0x7ffff1746ef0 (bvmul node_0x7ffff1746520 node_0x7ffff1745110))))
 (let (($x339 (and $x334 $x338)))
 (let (($x390 (= LdMem_0x7ffff1741570 StMem_0x7b88d60)))
 (and (or (not (= R0x7ffff173d490 (_ bv1 1))) $x390) $x390 (= StMem_0x7b88d60 pcso_node_0x7b94c10) (= node_0x7ffff1746520 LdMem_0x7ffff1741570) $x339 $x539 $x329 $x98 $x319 (or (not (= R0x7ffff173d490 (_ bv1 1))) $x510) $x510 (= StMem_0x7b8a3d0 pcso_node_0x7b9afc0) $x509 $x366 $x389 $x356 $x261 $x391 $x313 $x380)))))))))))))))))))))))))))
(assert
 (= carg_node_0x7ffff06e1570_CS0x414ef18 node_0x7ffff17442b0))
(assert
 (let (($x568 (= node_0x7ffff17442b0 fadd_0x7ffff1744450)))
 (let (($x546 (= node_0x7ffff1743d00 fmul_0x7ffff1744080)))
 (let (($x445 (or (or (= node_0x7ffff1743930 (_ bv0 64)) (= node_0x7ffff17409d0 (_ bv0 64))) (and (distinct fmul_0x7ffff1744080 (_ bv0 64)) true))))
 (let (($x441 (= fmul_0x7ffff1744080 (bvmul node_0x7ffff1743930 node_0x7ffff17409d0))))
 (let (($x446 (and $x441 $x445)))
 (let (($x556 (= node_0x7ffff1743930 fmul_0x7ffff1743ad0)))
 (let (($x457 (or (or (= node_0x7ffff1742c30 (_ bv0 64)) (= node_0x7ffff17434c0 (_ bv0 64))) (and (distinct fmul_0x7ffff1743ad0 (_ bv0 64)) true))))
 (let (($x452 (= fmul_0x7ffff1743ad0 (bvmul node_0x7ffff1742c30 node_0x7ffff17434c0))))
 (let (($x458 (and $x452 $x457)))
 (let ((?x411 (bvadd node_0x7ffff1742440 node_0x7ffff1743d00)))
 (let (($x412 (= fadd_0x7ffff1744450 ?x411)))
 (let (($x569 (= node_0x7ffff1742440 fmul_0x7ffff17425e0)))
 (let (($x421 (or (or (= node_0x7ffff1742070 (_ bv0 64)) (= node_0x7ffff1740d40 (_ bv0 64))) (and (distinct fmul_0x7ffff17425e0 (_ bv0 64)) true))))
 (let (($x417 (= fmul_0x7ffff17425e0 (bvmul node_0x7ffff1742070 node_0x7ffff1740d40))))
 (let (($x422 (and $x417 $x421)))
 (let (($x605 (= node_0x7ffff1742070 fmul_0x7ffff1742210)))
 (let (($x433 (or (or (= node_0x7ffff17413f0 (_ bv0 64)) (= node_0x7ffff1741c00 (_ bv0 64))) (and (distinct fmul_0x7ffff1742210 (_ bv0 64)) true))))
 (let (($x428 (= fmul_0x7ffff1742210 (bvmul node_0x7ffff17413f0 node_0x7ffff1741c00))))
 (let (($x434 (and $x428 $x433)))
 (and $x434 (= node_0x7ffff17413f0 LdMem_0x7ffff1741570) (= node_0x7ffff1741c00 LdMem_0x7ffff1741570) $x605 $x422 $x569 $x412 $x458 (= node_0x7ffff1742c30 LdMem_0x7ffff1742dd0) (= node_0x7ffff17434c0 LdMem_0x7ffff1742dd0) $x556 $x446 $x546 $x568)))))))))))))))))))))
(assert
 (= return_node_0x7ffff06e1fc0_CS0x414ef18 ccso_node_0x7ffff174aa10))
(assert
 (= parg_node_0x107adc10_CS0x414d628 node_0x11fef800))
(assert
 (let (($x588 (= node_0x11fef800 LdMem_0x11fed580)))
 (let (($x494 (= LdMem_0x11fed580 StMem_0x7b8f5e0)))
 (and (or (not (= R0x7ffff173d490 (_ bv1 1))) $x494) $x494 (= StMem_0x7b8f5e0 parg_node_0x11fed6c0) $x588))))
(assert
 (= node_0x107af910_CS0x414d628 pcso_node_0x11fee9a0))
(assert
 (= parg_node_0x107ae020_CS0x414d628 node_0x11fede20))
(assert
 (let (($x592 (= LdMem_0x11fed7f0 StMem_0x11fed960)))
 (and (or (not (= R0x7ffff173d490 (_ bv1 1))) $x592) $x592 (= StMem_0x11fed960 parg_node_0x11fedb10) (= node_0x11fede20 LdMem_0x11fed7f0))))
(assert
 (= node_0x107afe90_CS0x414d628 pcso_node_0x11feeda0))
(assert
 (= parg_node_0x107b5690_CS0x414c278 node_0x7b9e5d0))
(assert
 (let (($x267 (= LdMem_0x11feca10 StMem_0x11fecb50)))
 (and (or (not (= R0x7ffff173d490 (_ bv1 1))) $x267) $x267 (= StMem_0x11fecb50 parg_node_0x11fecc60) (= node_0x7b9e5d0 LdMem_0x11feca10))))
(assert
 (= node_0x107b7470_CS0x414c278 pcso_node_0x7b94c10))
(assert
 (= parg_node_0x107b5aa0_CS0x414c278 node_0x7b89b30))
(assert
 (let (($x371 (= LdMem_0x7ba1be0 StMem_0x7ba51f0)))
 (and (or (not (= R0x7ffff173d490 (_ bv1 1))) $x371) $x371 (= StMem_0x7ba51f0 parg_node_0x7b87230) (= node_0x7b89b30 LdMem_0x7ba1be0))))
(assert
 (= node_0x107b7a50_CS0x414c278 pcso_node_0x7b9afc0))
(assert
 (and (distinct carg_node_0x7ffff173e680 (_ bv0 64)) true))
(maximize fmul_0x7ffff1748f80)
(minimize pcso_node_0x7b9afc0)
(minimize fmul_0x7ffff17472c0)
(maximize fmul_0x7ffff1748bb0)
(maximize carg_node_0x7ffff173e680)
(maximize return_node_0x7ffff06e1fc0_CS0x414ef18)
(maximize node_0x7ffff1749170)
(minimize parg_node_0x107adc10_CS0x414d628)
(minimize carg_node_0x7ffff173e680)
(maximize node_0x7ffff1747120)
(minimize fadd_0x7ffff17486a0)
(minimize node_0x7ffff1748130)
(maximize fmul_0x7ffff174a210)
(maximize StMem_0x7b88d60)
(maximize carg_node_0x7ffff173e0f0)
(minimize node_0x7ffff17409d0)
(maximize node_0x7ffff174a440)
(maximize parg_node_0x11fedb10)
(maximize fmul_0x7ffff17496e0)
(maximize StMem_0x7b8a3d0)
(minimize node_0x7ffff1742440)
(minimize LdMem_0x7ffff1742dd0)
(maximize node_0x7ffff17478f0)
(maximize StMem_0x11fecb50)
(minimize ccso_node_0x7ffff174aa10)
(minimize node_0x7ffff1745110)
(minimize node_0x7ffff1743930)
(minimize pcso_node_0x7b94c10)
(minimize fmul_0x7ffff1742210)
(minimize fmul_0x7ffff174a210)
(maximize node_0x7ffff17409d0)
(maximize carg_node_0x7ffff06e1570_CS0x414ef18)
(minimize node_0x7ffff1744cc0)
(minimize carg_node_0x7ffff173e0f0)
(minimize pcso_node_0x11feeda0)
(maximize node_0x7ffff173ed40)
(minimize R0x7ffff173d490)
(maximize node_0x7ffff1742440)
(maximize fmul_0x7ffff17472c0)
(minimize node_0x107af910_CS0x414d628)
(maximize fmul_0x7ffff1743ad0)
(minimize node_0x7ffff17498d0)
(minimize return_node_0x7ffff06e1fc0_CS0x414ef18)
(minimize fmul_0x7ffff1747f00)
(minimize LdMem_0x11feca10)
(minimize StMem_0x11fed960)
(maximize LdMem_0x11fed7f0)
(minimize StMem_0x11fecb50)
(maximize carg_node_0x7ffff06e17e0_CS0x414ef18)
(minimize node_0x107afe90_CS0x414d628)
(maximize node_0x7ffff1745110)
(minimize fmul_0x7ffff1748bb0)
(minimize LdMem_0x11fed580)
(maximize node_0x7ffff1741c00)
(maximize StMem_0x11fed960)
(minimize carg_node_0x7ffff06e1ce0_CS0x414ef18)
(maximize parg_node_0x107b5690_CS0x414c278)
(maximize carg_node_0x7ffff06e1b40_CS0x414ef18)
(minimize parg_node_0x11fecc60)
(maximize node_0x7ffff1745d50)
(maximize node_0x7ffff1740d40)
(minimize node_0x11fede20)
(maximize node_0x7ffff17413f0)
(maximize node_0x7ffff1748a10)
(maximize fmul_0x7ffff17425e0)
(maximize R0x7ffff173d490)
(maximize parg_node_0x11fecc60)
(minimize fmul_0x7ffff1749a70)
(maximize node_0x107af910_CS0x414d628)
(minimize StMem_0x7b8a3d0)
(minimize StMem_0x7ba51f0)
(minimize node_0x7ffff1746940)
(minimize fmul_0x7ffff17496e0)
(minimize node_0x7ffff174a440)
(maximize node_0x7ffff1743d00)
(maximize node_0x7ffff1748de0)
(maximize LdMem_0x7ffff1744e40)
(maximize carg_node_0x7ffff06e1ce0_CS0x414ef18)
(maximize node_0x11fef800)
(minimize node_0x11fef800)
(minimize node_0x7ffff174a070)
(maximize StMem_0x7b8f5e0)
(maximize fmul_0x7ffff17482d0)
(maximize LdMem_0x11feca10)
(minimize node_0x7ffff1748de0)
(maximize ccso_node_0x7ffff174aa10)
(minimize fsub_0x7ffff1745ef0)
(check-sat)
(get-objectives)
