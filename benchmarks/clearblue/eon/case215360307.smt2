; 
(set-info :status unknown)
(declare-fun node_0x7ffff16e8350 () (_ BitVec 1))
(declare-fun ccso_node_0x7ffff16f21e0 () (_ BitVec 32))
(declare-fun ine_0x7ffff16f2920 () (_ BitVec 1))
(declare-fun carg_node_0x7ffff16e78c0 () (_ BitVec 64))
(declare-fun carg_node_0x7ffff06e1b40_CS0x412f338 () (_ BitVec 64))
(declare-fun carg_node_0x7ffff16e7a40 () (_ BitVec 64))
(declare-fun carg_node_0x7ffff06e1ce0_CS0x412f338 () (_ BitVec 64))
(declare-fun node_0x7ffff16f1c10 () (_ BitVec 64))
(declare-fun carg_node_0x7ffff06e1940_CS0x412f338 () (_ BitVec 64))
(declare-fun fsub_0x7ffff16f1db0 () (_ BitVec 64))
(declare-fun fmul_0x7ffff16f1a20 () (_ BitVec 64))
(declare-fun carg_node_0x7ffff16e7740 () (_ BitVec 64))
(declare-fun node_0x7ffff16f1880 () (_ BitVec 64))
(declare-fun node_0x7ffff16f14b0 () (_ BitVec 64))
(declare-fun fadd_0x7ffff16f1650 () (_ BitVec 64))
(declare-fun fmul_0x7ffff16f12c0 () (_ BitVec 64))
(declare-fun node_0x7ffff16f1120 () (_ BitVec 64))
(declare-fun node_0x7ffff16ee590 () (_ BitVec 64))
(declare-fun fsub_0x7ffff16ee730 () (_ BitVec 64))
(declare-fun carg_node_0x7ffff16e75e0 () (_ BitVec 64))
(declare-fun node_0x7ffff16ee120 () (_ BitVec 64))
(declare-fun LdMem_0x7ffff16ee2c0 () (_ BitVec 64))
(declare-fun pcso_node_0x12928b70 () (_ BitVec 64))
(declare-fun StMem_0x12928d20 () (_ BitVec 64))
(declare-fun R0x7ffff16daf70 () (_ BitVec 1))
(declare-fun node_0x7ffff16f0d90 () (_ BitVec 64))
(declare-fun fmul_0x7ffff16f0f30 () (_ BitVec 64))
(declare-fun node_0x7ffff16ed770 () (_ BitVec 64))
(declare-fun fsub_0x7ffff16ed910 () (_ BitVec 64))
(declare-fun carg_node_0x7ffff16e7440 () (_ BitVec 64))
(declare-fun node_0x7ffff16ed320 () (_ BitVec 64))
(declare-fun LdMem_0x7ffff16ed4a0 () (_ BitVec 64))
(declare-fun pcso_node_0x12928780 () (_ BitVec 64))
(declare-fun StMem_0x12928930 () (_ BitVec 64))
(declare-fun node_0x7ffff16f05b0 () (_ BitVec 64))
(declare-fun carg_node_0x7ffff06e17e0_CS0x412f338 () (_ BitVec 64))
(declare-fun fmul_0x7ffff16f0b60 () (_ BitVec 64))
(declare-fun node_0x7ffff16f00a0 () (_ BitVec 64))
(declare-fun fadd_0x7ffff16f0240 () (_ BitVec 64))
(declare-fun fmul_0x7ffff16efe70 () (_ BitVec 64))
(declare-fun node_0x7ffff16efcd0 () (_ BitVec 64))
(declare-fun node_0x7ffff16ef860 () (_ BitVec 64))
(declare-fun LdMem_0x7ffff16eb8f0 () (_ BitVec 64))
(declare-fun pcso_node_0x8066400 () (_ BitVec 64))
(declare-fun StMem_0x803ecb0 () (_ BitVec 64))
(declare-fun node_0x7ffff16ef090 () (_ BitVec 64))
(declare-fun fmul_0x7ffff16ef230 () (_ BitVec 64))
(declare-fun node_0x7ffff16eec70 () (_ BitVec 64))
(declare-fun LdMem_0x7ffff16ea520 () (_ BitVec 64))
(declare-fun pcso_node_0x804eac0 () (_ BitVec 64))
(declare-fun StMem_0x803ded0 () (_ BitVec 64))
(declare-fun node_0x7ffff16ec820 () (_ BitVec 64))
(declare-fun carg_node_0x7ffff06e1570_CS0x412f338 () (_ BitVec 64))
(declare-fun fadd_0x7ffff16ec9c0 () (_ BitVec 64))
(declare-fun fmul_0x7ffff16ec5f0 () (_ BitVec 64))
(declare-fun node_0x7ffff16ec450 () (_ BitVec 64))
(declare-fun node_0x7ffff16ebfe0 () (_ BitVec 64))
(declare-fun node_0x7ffff16eb750 () (_ BitVec 64))
(declare-fun node_0x7ffff16eb070 () (_ BitVec 64))
(declare-fun fmul_0x7ffff16eb210 () (_ BitVec 64))
(declare-fun node_0x7ffff16eac00 () (_ BitVec 64))
(declare-fun node_0x7ffff16ea3a0 () (_ BitVec 64))
(declare-fun return_node_0x7ffff06e1fc0_CS0x412f338 () (_ BitVec 32))
(declare-fun node_0x12927800 () (_ BitVec 64))
(declare-fun parg_node_0x107ae020_CS0x412dc88 () (_ BitVec 64))
(declare-fun LdMem_0x129271b0 () (_ BitVec 64))
(declare-fun parg_node_0x129274d0 () (_ BitVec 64))
(declare-fun StMem_0x12927320 () (_ BitVec 64))
(declare-fun node_0x107afe90_CS0x412dc88 () (_ BitVec 64))
(declare-fun node_0x12928030 () (_ BitVec 64))
(declare-fun parg_node_0x107ae730_CS0x412dc88 () (_ BitVec 64))
(declare-fun LdMem_0x129279e0 () (_ BitVec 64))
(declare-fun parg_node_0x12927d00 () (_ BitVec 64))
(declare-fun StMem_0x12927b50 () (_ BitVec 64))
(declare-fun node_0x107b0280_CS0x412dc88 () (_ BitVec 64))
(declare-fun node_0x803d630 () (_ BitVec 64))
(declare-fun parg_node_0x107b5aa0_CS0x412ce98 () (_ BitVec 64))
(declare-fun LdMem_0x80556e0 () (_ BitVec 64))
(declare-fun parg_node_0x803ad30 () (_ BitVec 64))
(declare-fun StMem_0x8058cf0 () (_ BitVec 64))
(declare-fun node_0x107b7a50_CS0x412ce98 () (_ BitVec 64))
(declare-fun node_0x8044fd0 () (_ BitVec 64))
(declare-fun parg_node_0x107b61b0_CS0x412ce98 () (_ BitVec 64))
(declare-fun LdMem_0x803fc90 () (_ BitVec 64))
(declare-fun parg_node_0x8042630 () (_ BitVec 64))
(declare-fun StMem_0x803bee0 () (_ BitVec 64))
(declare-fun node_0x107b7d30_CS0x412ce98 () (_ BitVec 64))
(declare-fun carg_node_0x7ffff16e7bc0 () (_ BitVec 64))
(assert
 (= node_0x7ffff16e8350 (_ bv1 1)))
(assert
 (let (($x174 (= ine_0x7ffff16f2920 (ite (and (distinct ccso_node_0x7ffff16f21e0 (_ bv0 32)) true) (_ bv1 1) (_ bv0 1)))))
 (and (= node_0x7ffff16e8350 ine_0x7ffff16f2920) $x174)))
(assert
 (= carg_node_0x7ffff06e1b40_CS0x412f338 carg_node_0x7ffff16e78c0))
(assert
 (= carg_node_0x7ffff06e1ce0_CS0x412f338 carg_node_0x7ffff16e7a40))
(assert
 (= carg_node_0x7ffff06e1940_CS0x412f338 node_0x7ffff16f1c10))
(assert
 (let (($x262 (= node_0x7ffff16f1c10 fsub_0x7ffff16f1db0)))
 (let (($x256 (= carg_node_0x7ffff16e7740 (_ bv0 64))))
 (let ((?x254 (bvmul carg_node_0x7ffff16e7740 carg_node_0x7ffff16e7740)))
 (let (($x255 (= fmul_0x7ffff16f1a20 ?x254)))
 (let (($x260 (and $x255 (or (or $x256 $x256) (and (distinct fmul_0x7ffff16f1a20 (_ bv0 64)) true)))))
 (let (($x273 (= node_0x7ffff16f1880 fmul_0x7ffff16f1a20)))
 (let (($x197 (= fsub_0x7ffff16f1db0 (bvsub node_0x7ffff16f14b0 node_0x7ffff16f1880))))
 (let (($x263 (= node_0x7ffff16f14b0 fadd_0x7ffff16f1650)))
 (let (($x250 (= node_0x7ffff16f1120 fmul_0x7ffff16f12c0)))
 (let (($x236 (or (or (= node_0x7ffff16ee590 (_ bv0 64)) (= node_0x7ffff16ee590 (_ bv0 64))) (and (distinct fmul_0x7ffff16f12c0 (_ bv0 64)) true))))
 (let ((?x231 (bvmul node_0x7ffff16ee590 node_0x7ffff16ee590)))
 (let (($x232 (= fmul_0x7ffff16f12c0 ?x231)))
 (let (($x237 (and $x232 $x236)))
 (let (($x245 (= node_0x7ffff16ee590 fsub_0x7ffff16ee730)))
 (let (($x243 (= fsub_0x7ffff16ee730 (bvsub node_0x7ffff16ee120 carg_node_0x7ffff16e75e0))))
 (let (($x270 (= node_0x7ffff16ee120 LdMem_0x7ffff16ee2c0)))
 (let (($x239 (= StMem_0x12928d20 pcso_node_0x12928b70)))
 (let (($x271 (= LdMem_0x7ffff16ee2c0 StMem_0x12928d20)))
 (let ((?x202 (bvadd node_0x7ffff16f0d90 node_0x7ffff16f1120)))
 (let (($x203 (= fadd_0x7ffff16f1650 ?x202)))
 (let (($x264 (= node_0x7ffff16f0d90 fmul_0x7ffff16f0f30)))
 (let (($x213 (or (or (= node_0x7ffff16ed770 (_ bv0 64)) (= node_0x7ffff16ed770 (_ bv0 64))) (and (distinct fmul_0x7ffff16f0f30 (_ bv0 64)) true))))
 (let ((?x207 (bvmul node_0x7ffff16ed770 node_0x7ffff16ed770)))
 (let (($x208 (= fmul_0x7ffff16f0f30 ?x207)))
 (let (($x214 (and $x208 $x213)))
 (let (($x265 (= node_0x7ffff16ed770 fsub_0x7ffff16ed910)))
 (let (($x220 (= fsub_0x7ffff16ed910 (bvsub node_0x7ffff16ed320 carg_node_0x7ffff16e7440))))
 (let (($x216 (= node_0x7ffff16ed320 LdMem_0x7ffff16ed4a0)))
 (let (($x248 (= StMem_0x12928930 pcso_node_0x12928780)))
 (let (($x268 (= LdMem_0x7ffff16ed4a0 StMem_0x12928930)))
 (and (or (not (= R0x7ffff16daf70 (_ bv1 1))) $x268) $x268 $x248 $x216 $x220 $x265 $x214 $x264 $x203 (or (not (= R0x7ffff16daf70 (_ bv1 1))) $x271) $x271 $x239 $x270 $x243 $x245 $x237 $x250 $x263 $x197 $x273 $x260 $x262))))))))))))))))))))))))))))))))
(assert
 (= carg_node_0x7ffff06e17e0_CS0x412f338 node_0x7ffff16f05b0))
(assert
 (let (($x298 (or (or (= (_ bv2 64) (_ bv0 64)) (= node_0x7ffff16f00a0 (_ bv0 64))) (and (distinct fmul_0x7ffff16f0b60 (_ bv0 64)) true))))
 (let ((?x292 (bvmul (_ bv2 64) node_0x7ffff16f00a0)))
 (let (($x293 (= fmul_0x7ffff16f0b60 ?x292)))
 (let (($x299 (and $x293 $x298)))
 (let (($x401 (= node_0x7ffff16f00a0 fadd_0x7ffff16f0240)))
 (let (($x177 (= node_0x7ffff16efcd0 fmul_0x7ffff16efe70)))
 (let (($x331 (or (or (= node_0x7ffff16ef860 (_ bv0 64)) (= node_0x7ffff16ee590 (_ bv0 64))) (and (distinct fmul_0x7ffff16efe70 (_ bv0 64)) true))))
 (let (($x327 (= fmul_0x7ffff16efe70 (bvmul node_0x7ffff16ef860 node_0x7ffff16ee590))))
 (let (($x332 (and $x327 $x331)))
 (let (($x178 (= node_0x7ffff16ef860 LdMem_0x7ffff16eb8f0)))
 (let (($x162 (= LdMem_0x7ffff16eb8f0 StMem_0x803ecb0)))
 (let ((?x304 (bvadd node_0x7ffff16ef090 node_0x7ffff16efcd0)))
 (let (($x305 (= fadd_0x7ffff16f0240 ?x304)))
 (let (($x402 (= node_0x7ffff16ef090 fmul_0x7ffff16ef230)))
 (let (($x314 (or (or (= node_0x7ffff16eec70 (_ bv0 64)) (= node_0x7ffff16ed770 (_ bv0 64))) (and (distinct fmul_0x7ffff16ef230 (_ bv0 64)) true))))
 (let (($x310 (= fmul_0x7ffff16ef230 (bvmul node_0x7ffff16eec70 node_0x7ffff16ed770))))
 (let (($x315 (and $x310 $x314)))
 (let (($x403 (= node_0x7ffff16eec70 LdMem_0x7ffff16ea520)))
 (let (($x169 (= LdMem_0x7ffff16ea520 StMem_0x803ded0)))
 (and (or (not (= R0x7ffff16daf70 (_ bv1 1))) $x169) $x169 (= StMem_0x803ded0 pcso_node_0x804eac0) $x403 $x315 $x402 $x305 (or (not (= R0x7ffff16daf70 (_ bv1 1))) $x162) $x162 (= StMem_0x803ecb0 pcso_node_0x8066400) $x178 $x332 $x177 $x401 $x299 (= node_0x7ffff16f05b0 fmul_0x7ffff16f0b60))))))))))))))))))))))
(assert
 (= carg_node_0x7ffff06e1570_CS0x412f338 node_0x7ffff16ec820))
(assert
 (let (($x276 (= node_0x7ffff16ec450 fmul_0x7ffff16ec5f0)))
 (let (($x391 (or (or (= node_0x7ffff16eb750 (_ bv0 64)) (= node_0x7ffff16ebfe0 (_ bv0 64))) (and (distinct fmul_0x7ffff16ec5f0 (_ bv0 64)) true))))
 (let (($x386 (= fmul_0x7ffff16ec5f0 (bvmul node_0x7ffff16eb750 node_0x7ffff16ebfe0))))
 (let (($x392 (and $x386 $x391)))
 (let ((?x365 (bvadd node_0x7ffff16eb070 node_0x7ffff16ec450)))
 (let (($x366 (= fadd_0x7ffff16ec9c0 ?x365)))
 (let (($x394 (= node_0x7ffff16eb070 fmul_0x7ffff16eb210)))
 (let (($x377 (or (or (= node_0x7ffff16ea3a0 (_ bv0 64)) (= node_0x7ffff16eac00 (_ bv0 64))) (and (distinct fmul_0x7ffff16eb210 (_ bv0 64)) true))))
 (let (($x372 (= fmul_0x7ffff16eb210 (bvmul node_0x7ffff16ea3a0 node_0x7ffff16eac00))))
 (let (($x378 (and $x372 $x377)))
 (and $x378 (= node_0x7ffff16ea3a0 LdMem_0x7ffff16ea520) (= node_0x7ffff16eac00 LdMem_0x7ffff16ea520) $x394 $x366 $x392 (= node_0x7ffff16eb750 LdMem_0x7ffff16eb8f0) (= node_0x7ffff16ebfe0 LdMem_0x7ffff16eb8f0) $x276 (= node_0x7ffff16ec820 fadd_0x7ffff16ec9c0)))))))))))))
(assert
 (= return_node_0x7ffff06e1fc0_CS0x412f338 ccso_node_0x7ffff16f21e0))
(assert
 (= parg_node_0x107ae020_CS0x412dc88 node_0x12927800))
(assert
 (let (($x445 (= node_0x12927800 LdMem_0x129271b0)))
 (let (($x431 (= StMem_0x12927320 parg_node_0x129274d0)))
 (let (($x433 (= LdMem_0x129271b0 StMem_0x12927320)))
 (and (or (not (= R0x7ffff16daf70 (_ bv1 1))) $x433) $x433 $x431 $x445)))))
(assert
 (= node_0x107afe90_CS0x412dc88 pcso_node_0x12928780))
(assert
 (= parg_node_0x107ae730_CS0x412dc88 node_0x12928030))
(assert
 (let (($x407 (= node_0x12928030 LdMem_0x129279e0)))
 (let (($x406 (= StMem_0x12927b50 parg_node_0x12927d00)))
 (let (($x409 (= LdMem_0x129279e0 StMem_0x12927b50)))
 (and (or (not (= R0x7ffff16daf70 (_ bv1 1))) $x409) $x409 $x406 $x407)))))
(assert
 (= node_0x107b0280_CS0x412dc88 pcso_node_0x12928b70))
(assert
 (= parg_node_0x107b5aa0_CS0x412ce98 node_0x803d630))
(assert
 (let (($x191 (= node_0x803d630 LdMem_0x80556e0)))
 (let (($x183 (= StMem_0x8058cf0 parg_node_0x803ad30)))
 (let (($x186 (= LdMem_0x80556e0 StMem_0x8058cf0)))
 (and (or (not (= R0x7ffff16daf70 (_ bv1 1))) $x186) $x186 $x183 $x191)))))
(assert
 (= node_0x107b7a50_CS0x412ce98 pcso_node_0x804eac0))
(assert
 (= parg_node_0x107b61b0_CS0x412ce98 node_0x8044fd0))
(assert
 (let (($x32 (= node_0x8044fd0 LdMem_0x803fc90)))
 (let (($x35 (= StMem_0x803bee0 parg_node_0x8042630)))
 (let (($x33 (= LdMem_0x803fc90 StMem_0x803bee0)))
 (and (or (not (= R0x7ffff16daf70 (_ bv1 1))) $x33) $x33 $x35 $x32)))))
(assert
 (= node_0x107b7d30_CS0x412ce98 pcso_node_0x8066400))
(assert
 (and (distinct carg_node_0x7ffff16e7bc0 (_ bv0 64)) true))
(minimize carg_node_0x7ffff06e1940_CS0x412f338)
(maximize return_node_0x7ffff06e1fc0_CS0x412f338)
(minimize node_0x12927800)
(minimize node_0x7ffff16ee120)
(minimize StMem_0x803bee0)
(maximize carg_node_0x7ffff06e1b40_CS0x412f338)
(minimize parg_node_0x803ad30)
(minimize node_0x7ffff16e8350)
(maximize parg_node_0x107ae020_CS0x412dc88)
(maximize node_0x107afe90_CS0x412dc88)
(maximize carg_node_0x7ffff16e7740)
(maximize fmul_0x7ffff16f0b60)
(check-sat)
(get-objectives)
