; 
(set-info :status unknown)
(declare-fun node_0x7ffff1100310 () (_ BitVec 1))
(declare-fun node_0x7ffff11005a0 () (_ BitVec 1))
(declare-fun node_0x7ffff1101cf0 () (_ BitVec 1))
(declare-fun node_0x7ffff11035a0 () (_ BitVec 1))
(declare-fun node_0x7ffff11054c0 () (_ BitVec 1))
(declare-fun node_0x7ffff1106f10 () (_ BitVec 1))
(declare-fun node_0x7ffff1108e90 () (_ BitVec 1))
(declare-fun node_0x7ffff110b360 () (_ BitVec 1))
(declare-fun node_0x7ffff110d970 () (_ BitVec 1))
(declare-fun node_0x7ffff1112c80 () (_ BitVec 1))
(declare-fun node_0x7ffff1113b40 () (_ BitVec 1))
(declare-fun node_0x7ffff1116ac0 () (_ BitVec 1))
(declare-fun carg_node_0x7ffff10ff060 () (_ BitVec 64))
(declare-fun gep_0x7ffff11951b0 () (_ BitVec 64))
(declare-fun node_0x7ffff1137610 () (_ BitVec 64))
(declare-fun isge_0x7ffff1137b20 () (_ BitVec 1))
(declare-fun isge_0x7ffff1145830 () (_ BitVec 1))
(declare-fun node_0x7ffff1144c50 () (_ BitVec 64))
(declare-fun add_0x7ffff1145600 () (_ BitVec 64))
(declare-fun node_0x7ffff11270b0 () (_ BitVec 64))
(declare-fun sub_0x7ffff11377b0 () (_ BitVec 64))
(declare-fun node_0x7ffff1149b20 () (_ BitVec 64))
(declare-fun isge_0x7ffff1149ed0 () (_ BitVec 1))
(declare-fun isge_0x7ffff1153270 () (_ BitVec 1))
(declare-fun node_0x7ffff1152ea0 () (_ BitVec 64))
(declare-fun add_0x7ffff1153040 () (_ BitVec 64))
(declare-fun sub_0x7ffff1149ca0 () (_ BitVec 64))
(declare-fun node_0x7ffff11592b0 () (_ BitVec 64))
(declare-fun isge_0x7ffff1159660 () (_ BitVec 1))
(declare-fun isge_0x7ffff11628e0 () (_ BitVec 1))
(declare-fun node_0x7ffff1162510 () (_ BitVec 64))
(declare-fun add_0x7ffff11626b0 () (_ BitVec 64))
(declare-fun sub_0x7ffff1159430 () (_ BitVec 64))
(declare-fun node_0x7ffff1158e80 () (_ BitVec 64))
(declare-fun sdiv_0x7ffff1159020 () (_ BitVec 64))
(declare-fun node_0x7ffff1158a10 () (_ BitVec 64))
(declare-fun mul_0x7ffff1158bb0 () (_ BitVec 64))
(declare-fun node_0x7ffff1158660 () (_ BitVec 64))
(declare-fun sub_0x7ffff11587e0 () (_ BitVec 64))
(declare-fun node_0x7ffff1164c10 () (_ BitVec 32))
(declare-fun islt_0x7ffff1164fb0 () (_ BitVec 1))
(declare-fun islt_0x7ffff1165800 () (_ BitVec 1))
(declare-fun trunc_0x7ffff1164db0 () (_ BitVec 32))
(declare-fun node_0x7ffff1164840 () (_ BitVec 64))
(declare-fun ashr_0x7ffff11649e0 () (_ BitVec 64))
(declare-fun node_0x7ffff11645d0 () (_ BitVec 64))
(declare-fun p2i_0x7ffff1141df0 () (_ BitVec 64))
(declare-fun node_0x7ffff1164160 () (_ BitVec 64))
(declare-fun LdMem_0x7ffff1164300 () (_ BitVec 64))
(declare-fun StMem_0x7ffff1129b30 () (_ BitVec 64))
(declare-fun R0x1dc5b360 () (_ BitVec 1))
(declare-fun node_0x7ffff11287c0 () (_ BitVec 64))
(declare-fun LdMem_0x7ffff1128960 () (_ BitVec 64))
(declare-fun StMem_0x47b6b070 () (_ BitVec 64))
(declare-fun R0x7ffff10ff170 () (_ BitVec 1))
(declare-fun node_0x1dacc020 () (_ BitVec 64))
(declare-fun node_0x48035950 () (_ BitVec 64))
(declare-fun i2p_0x48035a80 () (_ BitVec 64))
(declare-fun ine_0x7ffff117fd80 () (_ BitVec 1))
(declare-fun node_0x7ffff117f7f0 () (_ BitVec 64))
(declare-fun LdMem_0x7ffff117b0e0 () (_ BitVec 64))
(declare-fun StMem_0x47e2d9a0 () (_ BitVec 64))
(declare-fun node_0x47e2db70 () (_ BitVec 64))
(declare-fun node_0x4804fa80 () (_ BitVec 64))
(declare-fun i2p_0x4804fbb0 () (_ BitVec 64))
(declare-fun iult_0x7ffff1189200 () (_ BitVec 1))
(declare-fun node_0x7ffff1188de0 () (_ BitVec 64))
(declare-fun udiv_0x7ffff1188f80 () (_ BitVec 64))
(declare-fun LdMem_0x7ffff1186170 () (_ BitVec 64))
(declare-fun node_0x7ffff1188910 () (_ BitVec 64))
(declare-fun iult_0x7ffff118e140 () (_ BitVec 1))
(declare-fun node_0x7ffff118dd20 () (_ BitVec 64))
(declare-fun udiv_0x7ffff118dec0 () (_ BitVec 64))
(declare-fun node_0x7ffff118d850 () (_ BitVec 64))
(declare-fun node_0x480540a0 () (_ BitVec 64))
(declare-fun node_0x47eb9130 () (_ BitVec 64))
(declare-fun StMem_0x47eb6230 () (_ BitVec 64))
(declare-fun isge_0x7ffff1176a50 () (_ BitVec 1))
(declare-fun node_0x7ffff1176680 () (_ BitVec 64))
(declare-fun sub_0x7ffff1176820 () (_ BitVec 64))
(declare-fun node_0x7ffff1176280 () (_ BitVec 64))
(declare-fun sdiv_0x7ffff1176420 () (_ BitVec 64))
(declare-fun node_0x7ffff1175e30 () (_ BitVec 64))
(declare-fun mul_0x7ffff1175fb0 () (_ BitVec 64))
(declare-fun sub_0x7ffff1148820 () (_ BitVec 64))
(declare-fun node_0x7ffff11486a0 () (_ BitVec 64))
(declare-fun select_0x7ffff1127250 () (_ BitVec 64))
(declare-fun node_0x7ffff11267d0 () (_ BitVec 64))
(declare-fun carg_node_0x7ffff10ff5b0 () (_ BitVec 64))
(declare-fun node_0x7ffff1126ba0 () (_ BitVec 1))
(declare-fun islt_0x7ffff1126d40 () (_ BitVec 1))
(declare-fun ashr_0x7ffff1126970 () (_ BitVec 64))
(declare-fun node_0x7ffff1126240 () (_ BitVec 64))
(declare-fun p2i_0x7ffff1106220 () (_ BitVec 64))
(declare-fun node_0x7ffff1125dd0 () (_ BitVec 64))
(declare-fun LdMem_0x7ffff1125f70 () (_ BitVec 64))
(declare-fun StMem_0x47828020 () (_ BitVec 64))
(declare-fun node_0x477fb0a0 () (_ BitVec 64))
(declare-fun node_0x480355e0 () (_ BitVec 64))
(declare-fun i2p_0x48035710 () (_ BitVec 64))
(declare-fun node_0x7ffff1194f50 () (_ BitVec 64))
(assert
 (let (($x203 (= node_0x7ffff1100310 (_ bv1 1))))
 (let (($x204 (not $x203)))
 (let (($x262 (or $x204 (and (not (= node_0x7ffff11005a0 (_ bv1 1))) $x203))))
 (let (($x279 (= node_0x7ffff1101cf0 (_ bv1 1))))
 (let (($x284 (and $x279 $x262)))
 (let (($x317 (or (and (not $x279) $x262) (and (not (= node_0x7ffff11035a0 (_ bv1 1))) $x284))))
 (let (($x278 (= node_0x7ffff11054c0 (_ bv1 1))))
 (let (($x280 (and $x278 $x317)))
 (let (($x315 (or (and (not $x278) $x317) (and (not (= node_0x7ffff1106f10 (_ bv1 1))) $x280))))
 (let (($x418 (and (not (= node_0x7ffff1108e90 (_ bv1 1))) $x315)))
 (let (($x472 (= node_0x7ffff110b360 (_ bv1 1))))
 (let (($x376 (and $x472 $x418)))
 (let (($x333 (= node_0x7ffff110d970 (_ bv1 1))))
 (let (($x470 (and $x333 $x376)))
 (let (($x374 (= node_0x7ffff1112c80 (_ bv1 1))))
 (let (($x594 (and $x374 $x470)))
 (let (($x501 (= node_0x7ffff1113b40 (_ bv1 1))))
 (let (($x378 (and $x501 $x594)))
 (let (($x695 (and (not (= node_0x7ffff1116ac0 (_ bv1 1))) $x378)))
 (let (($x609 (not $x501)))
 (let (($x573 (and $x609 $x594)))
 (or (and (not $x374) $x470) $x573 $x695)))))))))))))))))))))))
(assert
 (let (($x123924 (= carg_node_0x7ffff10ff060 (_ bv0 64))))
 (let (($x121667 (or $x123924 (and (distinct carg_node_0x7ffff10ff060 (_ bv0 64)) true))))
 (let (($x122070 (and (= gep_0x7ffff11951b0 (ite $x123924 (_ bv0 64) carg_node_0x7ffff10ff060)) $x121667)))
 (let (($x212 (= isge_0x7ffff1137b20 (ite (bvsge node_0x7ffff1137610 (_ bv0 64)) (_ bv1 1) (_ bv0 1)))))
 (let (($x121702 (= node_0x7ffff1100310 isge_0x7ffff1137b20)))
 (let (($x122900 (= node_0x7ffff11005a0 isge_0x7ffff1145830)))
 (let (($x268 (= isge_0x7ffff1145830 (ite (bvsge node_0x7ffff1144c50 (_ bv0 64)) (_ bv1 1) (_ bv0 1)))))
 (let (($x122687 (= node_0x7ffff1144c50 add_0x7ffff1145600)))
 (let (($x273 (= add_0x7ffff1145600 (bvadd node_0x7ffff1137610 (_ bv18446744073709551615 64)))))
 (let ((?x217 (bvsub node_0x7ffff11270b0 (_ bv1 64))))
 (let (($x218 (= sub_0x7ffff11377b0 ?x217)))
 (let (($x121701 (= node_0x7ffff1137610 sub_0x7ffff11377b0)))
 (let (($x302 (= isge_0x7ffff1149ed0 (ite (bvsge node_0x7ffff1149b20 (_ bv0 64)) (_ bv1 1) (_ bv0 1)))))
 (let (($x121422 (= node_0x7ffff1101cf0 isge_0x7ffff1149ed0)))
 (let (($x117165 (= node_0x7ffff11035a0 isge_0x7ffff1153270)))
 (let (($x323 (= isge_0x7ffff1153270 (ite (bvsge node_0x7ffff1152ea0 (_ bv0 64)) (_ bv1 1) (_ bv0 1)))))
 (let (($x118912 (= node_0x7ffff1152ea0 add_0x7ffff1153040)))
 (let (($x327 (= add_0x7ffff1153040 (bvadd node_0x7ffff1149b20 (_ bv18446744073709551615 64)))))
 (let (($x305 (= sub_0x7ffff1149ca0 ?x217)))
 (let (($x119931 (= node_0x7ffff1149b20 sub_0x7ffff1149ca0)))
 (let (($x342 (= isge_0x7ffff1159660 (ite (bvsge node_0x7ffff11592b0 (_ bv0 64)) (_ bv1 1) (_ bv0 1)))))
 (let (($x122425 (= node_0x7ffff11054c0 isge_0x7ffff1159660)))
 (let (($x122752 (= node_0x7ffff1106f10 isge_0x7ffff11628e0)))
 (let (($x400 (= isge_0x7ffff11628e0 (ite (bvsge node_0x7ffff1162510 (_ bv0 64)) (_ bv1 1) (_ bv0 1)))))
 (let (($x123970 (= node_0x7ffff1162510 add_0x7ffff11626b0)))
 (let (($x404 (= add_0x7ffff11626b0 (bvadd node_0x7ffff11592b0 (_ bv18446744073709551615 64)))))
 (let (($x123014 (= node_0x7ffff11592b0 sub_0x7ffff1159430)))
 (let (($x347 (= sub_0x7ffff1159430 (bvsub node_0x7ffff1158e80 (_ bv1 64)))))
 (let (($x122062 (= node_0x7ffff1158e80 sdiv_0x7ffff1159020)))
 (let (($x357 (or (or (= node_0x7ffff1158a10 (_ bv0 64)) (= (_ bv2 64) (_ bv0 64))) (and (distinct sdiv_0x7ffff1159020 (_ bv0 64)) true))))
 (let (($x358 (and (= sdiv_0x7ffff1159020 (bvsdiv node_0x7ffff1158a10 (_ bv2 64))) $x357)))
 (let (($x122064 (= node_0x7ffff1158a10 mul_0x7ffff1158bb0)))
 (let (($x365 (= node_0x7ffff1158660 (_ bv0 64))))
 (let (($x364 (= node_0x7ffff11270b0 (_ bv0 64))))
 (let (($x366 (or $x364 $x365)))
 (let ((?x362 (bvmul node_0x7ffff11270b0 node_0x7ffff1158660)))
 (let (($x363 (= mul_0x7ffff1158bb0 ?x362)))
 (let (($x369 (and $x363 (or $x366 (and (distinct mul_0x7ffff1158bb0 (_ bv0 64)) true)))))
 (let (($x372 (= sub_0x7ffff11587e0 ?x217)))
 (let (($x123216 (= node_0x7ffff1158660 sub_0x7ffff11587e0)))
 (let (($x411 (= islt_0x7ffff1164fb0 (ite (bvslt node_0x7ffff1164c10 (_ bv1 32)) (_ bv1 1) (_ bv0 1)))))
 (let (($x123027 (= node_0x7ffff1108e90 islt_0x7ffff1164fb0)))
 (let (($x116767 (= node_0x7ffff110b360 islt_0x7ffff1165800)))
 (let (($x387 (= islt_0x7ffff1165800 (ite (bvslt node_0x7ffff1164c10 (_ bv3 32)) (_ bv1 1) (_ bv0 1)))))
 (let (($x123844 (= node_0x7ffff1164c10 trunc_0x7ffff1164db0)))
 (let ((?x426 ((_ extract 31 0) node_0x7ffff1164840)))
 (let (($x427 (= trunc_0x7ffff1164db0 ?x426)))
 (let (($x118868 (= node_0x7ffff1164840 ashr_0x7ffff11649e0)))
 (let (($x436 (or (or (= node_0x7ffff11645d0 (_ bv0 64)) (bvsge (_ bv2 64) (_ bv10 64))) (and (distinct ashr_0x7ffff11649e0 (_ bv0 64)) true))))
 (let (($x437 (and (= ashr_0x7ffff11649e0 (bvashr node_0x7ffff11645d0 (_ bv2 64))) $x436)))
 (let (($x121727 (= node_0x7ffff11645d0 p2i_0x7ffff1141df0)))
 (let (($x441 (= p2i_0x7ffff1141df0 node_0x7ffff1164160)))
 (let (($x123892 (= node_0x7ffff1164160 LdMem_0x7ffff1164300)))
 (let (($x123256 (= LdMem_0x7ffff1164300 StMem_0x7ffff1129b30)))
 (let (($x1573 (not (= R0x1dc5b360 (_ bv1 1)))))
 (let (($x121743 (or $x1573 $x123256)))
 (let (($x123382 (= StMem_0x7ffff1129b30 node_0x7ffff11287c0)))
 (let (($x123029 (= node_0x7ffff11287c0 LdMem_0x7ffff1128960)))
 (let (($x123413 (= LdMem_0x7ffff1128960 StMem_0x47b6b070)))
 (let (($x123846 (not (= R0x7ffff10ff170 (_ bv1 1)))))
 (let (($x121728 (or $x123846 $x123413)))
 (let (($x118402 (= StMem_0x47b6b070 node_0x1dacc020)))
 (let (($x462 (= i2p_0x48035a80 node_0x48035950)))
 (let (($x4763 (= node_0x1dacc020 i2p_0x48035a80)))
 (let (($x123916 (= node_0x7ffff1112c80 ine_0x7ffff117fd80)))
 (let (($x600 (= ine_0x7ffff117fd80 (ite (and (distinct node_0x7ffff117f7f0 (_ bv0 64)) true) (_ bv1 1) (_ bv0 1)))))
 (let (($x121754 (= node_0x7ffff117f7f0 LdMem_0x7ffff117b0e0)))
 (let (($x121748 (= LdMem_0x7ffff117b0e0 StMem_0x47e2d9a0)))
 (let (($x115007 (or $x123846 $x121748)))
 (let (($x123306 (= StMem_0x47e2d9a0 node_0x47e2db70)))
 (let (($x611 (= i2p_0x4804fbb0 node_0x4804fa80)))
 (let (($x121682 (= node_0x47e2db70 i2p_0x4804fbb0)))
 (let (($x122004 (= node_0x7ffff1113b40 iult_0x7ffff1189200)))
 (let (($x492 (= iult_0x7ffff1189200 (ite (bvult (_ bv1 64) node_0x7ffff1188de0) (_ bv1 1) (_ bv0 1)))))
 (let (($x117252 (= node_0x7ffff1188de0 udiv_0x7ffff1188f80)))
 (let (($x122478 (= node_0x7ffff1188910 LdMem_0x7ffff1186170)))
 (let (($x637 (or (or (= node_0x7ffff1188910 (_ bv0 64)) (= (_ bv8 64) (_ bv0 64))) (and (distinct udiv_0x7ffff1188f80 (_ bv0 64)) true))))
 (let (($x535 (and (= udiv_0x7ffff1188f80 (bvudiv node_0x7ffff1188910 (_ bv8 64))) $x637)))
 (let (($x40004 (= node_0x7ffff1116ac0 iult_0x7ffff118e140)))
 (let (($x548 (= iult_0x7ffff118e140 (ite (bvult (_ bv2 64) node_0x7ffff118dd20) (_ bv1 1) (_ bv0 1)))))
 (let (($x121725 (= node_0x7ffff118dd20 udiv_0x7ffff118dec0)))
 (let (($x698 (or (or (= node_0x7ffff118d850 (_ bv0 64)) (= (_ bv8 64) (_ bv0 64))) (and (distinct udiv_0x7ffff118dec0 (_ bv0 64)) true))))
 (let (($x699 (and (= udiv_0x7ffff118dec0 (bvudiv node_0x7ffff118d850 (_ bv8 64))) $x698)))
 (let (($x123021 (= node_0x7ffff118d850 LdMem_0x7ffff1186170)))
 (let (($x123848 (= node_0x47eb9130 node_0x480540a0)))
 (let (($x123180 (= StMem_0x47eb6230 node_0x47eb9130)))
 (let (($x123159 (= LdMem_0x7ffff1186170 StMem_0x47eb6230)))
 (let (($x123843 (or $x123846 $x123159)))
 (let (($x122545 (= node_0x7ffff110d970 isge_0x7ffff1176a50)))
 (let (($x493 (= isge_0x7ffff1176a50 (ite (bvsge node_0x7ffff1176680 (_ bv0 64)) (_ bv1 1) (_ bv0 1)))))
 (let (($x123584 (= node_0x7ffff1176680 sub_0x7ffff1176820)))
 (let (($x496 (= sub_0x7ffff1176820 (bvsub node_0x7ffff1176280 (_ bv1 64)))))
 (let (($x123181 (= node_0x7ffff1176280 sdiv_0x7ffff1176420)))
 (let (($x579 (or (or (= node_0x7ffff1175e30 (_ bv0 64)) (= (_ bv2 64) (_ bv0 64))) (and (distinct sdiv_0x7ffff1176420 (_ bv0 64)) true))))
 (let (($x580 (and (= sdiv_0x7ffff1176420 (bvsdiv node_0x7ffff1175e30 (_ bv2 64))) $x579)))
 (let (($x122328 (= node_0x7ffff1175e30 mul_0x7ffff1175fb0)))
 (let (($x593 (= sub_0x7ffff1148820 ?x217)))
 (let (($x121652 (= node_0x7ffff11486a0 sub_0x7ffff1148820)))
 (let (($x589 (or (or $x364 (= node_0x7ffff11486a0 (_ bv0 64))) (and (distinct mul_0x7ffff1175fb0 (_ bv0 64)) true))))
 (let ((?x584 (bvmul node_0x7ffff11270b0 node_0x7ffff11486a0)))
 (let (($x590 (and (= mul_0x7ffff1175fb0 ?x584) $x589)))
 (let (($x121636 (= node_0x7ffff11270b0 select_0x7ffff1127250)))
 (let (($x224 (= node_0x7ffff1126ba0 (_ bv1 1))))
 (let ((?x225 (ite $x224 carg_node_0x7ffff10ff5b0 node_0x7ffff11267d0)))
 (let (($x226 (= select_0x7ffff1127250 ?x225)))
 (let (($x123586 (= node_0x7ffff1126ba0 islt_0x7ffff1126d40)))
 (let (($x231 (= islt_0x7ffff1126d40 (ite (bvslt carg_node_0x7ffff10ff5b0 node_0x7ffff11267d0) (_ bv1 1) (_ bv0 1)))))
 (let (($x121803 (= node_0x7ffff11267d0 ashr_0x7ffff1126970)))
 (let (($x243 (or (or (= node_0x7ffff1126240 (_ bv0 64)) (bvsge (_ bv2 64) (_ bv10 64))) (and (distinct ashr_0x7ffff1126970 (_ bv0 64)) true))))
 (let (($x244 (and (= ashr_0x7ffff1126970 (bvashr node_0x7ffff1126240 (_ bv2 64))) $x243)))
 (let (($x123855 (= node_0x7ffff1126240 p2i_0x7ffff1106220)))
 (let (($x248 (= p2i_0x7ffff1106220 node_0x7ffff1125dd0)))
 (let (($x122568 (= node_0x7ffff1125dd0 LdMem_0x7ffff1125f70)))
 (let (($x121650 (= LdMem_0x7ffff1125f70 StMem_0x47828020)))
 (let (($x121651 (or $x123846 $x121650)))
 (let (($x123767 (= StMem_0x47828020 node_0x477fb0a0)))
 (let (($x259 (= i2p_0x48035710 node_0x480355e0)))
 (let (($x123101 (= node_0x477fb0a0 i2p_0x48035710)))
 (and $x123101 $x259 $x123767 $x121651 $x121650 $x122568 $x248 $x123855 $x244 $x121803 $x231 $x123586 $x226 $x121636 $x590 $x121652 $x593 $x122328 $x580 $x123181 $x496 $x123584 $x493 $x122545 $x123843 $x123159 $x123180 $x123848 $x123021 $x699 $x121725 $x548 $x40004 $x535 $x122478 $x117252 $x492 $x122004 $x121682 $x611 $x123306 $x115007 $x121748 $x121754 $x600 $x123916 $x4763 $x462 $x118402 $x121728 $x123413 $x123029 $x123382 $x121743 $x123256 $x123892 $x441 $x121727 $x437 $x118868 $x427 $x123844 $x387 $x116767 $x123027 $x411 $x123216 $x372 $x369 $x122064 $x358 $x122062 $x347 $x123014 $x404 $x123970 $x400 $x122752 $x122425 $x342 $x119931 $x305 $x327 $x118912 $x323 $x117165 $x121422 $x302 $x121701 $x218 $x273 $x122687 $x268 $x122900 $x121702 $x212 $x122070))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (= node_0x7ffff1194f50 gep_0x7ffff11951b0))
(assert
 (= node_0x7ffff1194f50 (_ bv0 64)))
(maximize node_0x7ffff11287c0)
(minimize StMem_0x47eb6230)
(maximize islt_0x7ffff1165800)
(minimize carg_node_0x7ffff10ff5b0)
(maximize i2p_0x4804fbb0)
(minimize islt_0x7ffff1165800)
(maximize node_0x7ffff118dd20)
(maximize node_0x7ffff1144c50)
(maximize add_0x7ffff1153040)
(minimize node_0x7ffff11035a0)
(minimize node_0x7ffff11592b0)
(maximize node_0x7ffff1149b20)
(minimize ashr_0x7ffff11649e0)
(maximize node_0x7ffff110b360)
(minimize R0x7ffff10ff170)
(maximize StMem_0x47eb6230)
(minimize node_0x7ffff11287c0)
(minimize StMem_0x7ffff1129b30)
(maximize isge_0x7ffff11628e0)
(maximize node_0x7ffff1162510)
(minimize node_0x7ffff11270b0)
(minimize ine_0x7ffff117fd80)
(maximize node_0x7ffff11005a0)
(minimize add_0x7ffff11626b0)
(maximize islt_0x7ffff1126d40)
(maximize islt_0x7ffff1164fb0)
(maximize sub_0x7ffff1148820)
(minimize sub_0x7ffff11587e0)
(maximize node_0x7ffff118d850)
(minimize node_0x7ffff1126ba0)
(maximize node_0x7ffff1176680)
(minimize trunc_0x7ffff1164db0)
(minimize node_0x7ffff1188de0)
(minimize node_0x7ffff1164160)
(minimize node_0x7ffff11645d0)
(minimize sdiv_0x7ffff1159020)
(maximize node_0x48035950)
(minimize node_0x7ffff1158660)
(maximize LdMem_0x7ffff117b0e0)
(maximize node_0x47e2db70)
(maximize LdMem_0x7ffff1164300)
(maximize udiv_0x7ffff118dec0)
(minimize sub_0x7ffff1149ca0)
(maximize node_0x1dacc020)
(maximize ashr_0x7ffff11649e0)
(minimize node_0x480355e0)
(maximize node_0x7ffff1188910)
(minimize p2i_0x7ffff1141df0)
(maximize udiv_0x7ffff1188f80)
(minimize node_0x7ffff1176680)
(maximize sub_0x7ffff1149ca0)
(maximize sub_0x7ffff11377b0)
(minimize add_0x7ffff1145600)
(minimize node_0x7ffff118d850)
(maximize node_0x7ffff1125dd0)
(minimize StMem_0x47b6b070)
(minimize node_0x477fb0a0)
(minimize isge_0x7ffff11628e0)
(maximize sub_0x7ffff11587e0)
(minimize sub_0x7ffff1176820)
(maximize node_0x7ffff1164c10)
(maximize node_0x7ffff1101cf0)
(minimize node_0x7ffff1100310)
(maximize StMem_0x47b6b070)
(minimize node_0x7ffff1112c80)
(minimize isge_0x7ffff1137b20)
(minimize node_0x7ffff1158a10)
(minimize node_0x7ffff1108e90)
(minimize LdMem_0x7ffff1125f70)
(maximize LdMem_0x7ffff1128960)
(maximize node_0x480355e0)
(minimize udiv_0x7ffff1188f80)
(maximize isge_0x7ffff1153270)
(maximize node_0x7ffff1158a10)
(check-sat)
(get-objectives)
