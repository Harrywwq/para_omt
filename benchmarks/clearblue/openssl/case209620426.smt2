; 
(set-info :status unknown)
(declare-fun carg_node_0x7fff9ee815c0 () (_ BitVec 64))
(declare-fun add_0x7fff9ee82380 () (_ BitVec 64))
(declare-fun node_0x7fff9ee82210 () (_ BitVec 64))
(declare-fun node_0x7fff9ee83b50 () (_ BitVec 64))
(declare-fun sub_0x7fff9ee84200 () (_ BitVec 64))
(declare-fun sdiv_0x7fff9ee83de0 () (_ BitVec 64))
(declare-fun node_0x7fff9ee836e0 () (_ BitVec 64))
(declare-fun add_0x7fff9ee83880 () (_ BitVec 64))
(declare-fun node_0x7fff9ee831d0 () (_ BitVec 64))
(declare-fun mul_0x7fff9ee83370 () (_ BitVec 64))
(declare-fun node_0x7fff9ee82db0 () (_ BitVec 64))
(declare-fun sdiv_0x7fff9ee82f50 () (_ BitVec 64))
(declare-fun node_0x7fff9ee826f0 () (_ BitVec 64))
(declare-fun mul_0x7fff9ee82890 () (_ BitVec 64))
(declare-fun node_0x7fff9ee84060 () (_ BitVec 64))
(declare-fun node_0x7fff9ee85a00 () (_ BitVec 64))
(declare-fun sub_0x7fff9ee85fa0 () (_ BitVec 64))
(declare-fun sdiv_0x7fff9ee85ba0 () (_ BitVec 64))
(declare-fun node_0x7fff9ee85590 () (_ BitVec 64))
(declare-fun mul_0x7fff9ee85730 () (_ BitVec 64))
(declare-fun node_0x7fff9ee85030 () (_ BitVec 64))
(declare-fun sdiv_0x7fff9ee851d0 () (_ BitVec 64))
(declare-fun node_0x7fff9ee84a80 () (_ BitVec 64))
(declare-fun mul_0x7fff9ee84c20 () (_ BitVec 64))
(declare-fun node_0x7fff9ee84570 () (_ BitVec 64))
(declare-fun add_0x7fff9ee84710 () (_ BitVec 64))
(declare-fun node_0x7fff9ee85e20 () (_ BitVec 64))
(declare-fun add_0x7fff9ee864b0 () (_ BitVec 64))
(declare-fun node_0x7fff9ee86310 () (_ BitVec 64))
(declare-fun node_0x7fff9ee87840 () (_ BitVec 64))
(declare-fun sub_0x7fff9ee87e00 () (_ BitVec 64))
(declare-fun sdiv_0x7fff9ee879e0 () (_ BitVec 64))
(declare-fun node_0x7fff9ee873d0 () (_ BitVec 64))
(declare-fun mul_0x7fff9ee87570 () (_ BitVec 64))
(declare-fun node_0x7fff9ee86fb0 () (_ BitVec 64))
(declare-fun sdiv_0x7fff9ee87150 () (_ BitVec 64))
(declare-fun node_0x7fff9ee86820 () (_ BitVec 64))
(declare-fun mul_0x7fff9ee869c0 () (_ BitVec 64))
(declare-fun node_0x7fff9ee87c60 () (_ BitVec 64))
(declare-fun trunc_0x7fff9ee82c80 () (_ BitVec 32))
(declare-fun node_0x7fff9ee88030 () (_ BitVec 32))
(declare-fun StMem_0x7fff9ee882c0 () (_ BitVec 32))
(declare-fun R0x7fff9ee816d0 () (_ BitVec 1))
(declare-fun LdMem_0x2275820f0 () (_ BitVec 32))
(declare-fun node_0x227581f50 () (_ BitVec 32))
(assert
 (= add_0x7fff9ee82380 (bvadd carg_node_0x7fff9ee815c0 (_ bv68569 64))))
(assert
 (= node_0x7fff9ee82210 add_0x7fff9ee82380))
(assert
 (let (($x38 (= sub_0x7fff9ee84200 (bvsub node_0x7fff9ee82210 node_0x7fff9ee83b50))))
 (let (($x40 (= node_0x7fff9ee83b50 sdiv_0x7fff9ee83de0)))
 (let (($x50 (or (or (= node_0x7fff9ee836e0 (_ bv0 64)) (= (_ bv4 64) (_ bv0 64))) (and (distinct sdiv_0x7fff9ee83de0 (_ bv0 64)) true))))
 (let (($x51 (and (= sdiv_0x7fff9ee83de0 (bvsdiv node_0x7fff9ee836e0 (_ bv4 64))) $x50)))
 (let (($x53 (= node_0x7fff9ee836e0 add_0x7fff9ee83880)))
 (let (($x57 (= add_0x7fff9ee83880 (bvadd node_0x7fff9ee831d0 (_ bv3 64)))))
 (let (($x59 (= node_0x7fff9ee831d0 mul_0x7fff9ee83370)))
 (let (($x68 (or (or (= (_ bv146097 64) (_ bv0 64)) (= node_0x7fff9ee82db0 (_ bv0 64))) (and (distinct mul_0x7fff9ee83370 (_ bv0 64)) true))))
 (let (($x69 (and (= mul_0x7fff9ee83370 (bvmul (_ bv146097 64) node_0x7fff9ee82db0)) $x68)))
 (let (($x71 (= node_0x7fff9ee82db0 sdiv_0x7fff9ee82f50)))
 (let (($x78 (or (or (= node_0x7fff9ee826f0 (_ bv0 64)) (= (_ bv146097 64) (_ bv0 64))) (and (distinct sdiv_0x7fff9ee82f50 (_ bv0 64)) true))))
 (let (($x79 (and (= sdiv_0x7fff9ee82f50 (bvsdiv node_0x7fff9ee826f0 (_ bv146097 64))) $x78)))
 (let (($x87 (or (or (= (_ bv4 64) (_ bv0 64)) (= node_0x7fff9ee82210 (_ bv0 64))) (and (distinct mul_0x7fff9ee82890 (_ bv0 64)) true))))
 (let (($x88 (and (= mul_0x7fff9ee82890 (bvmul (_ bv4 64) node_0x7fff9ee82210)) $x87)))
 (let (($x81 (= node_0x7fff9ee826f0 mul_0x7fff9ee82890)))
 (and $x81 $x88 $x79 $x71 $x69 $x59 $x57 $x53 $x51 $x40 $x38)))))))))))))))))
(assert
 (= node_0x7fff9ee84060 sub_0x7fff9ee84200))
(assert
 (let (($x12903 (= sub_0x7fff9ee85fa0 (bvsub node_0x7fff9ee84060 node_0x7fff9ee85a00))))
 (let (($x12904 (= node_0x7fff9ee85a00 sdiv_0x7fff9ee85ba0)))
 (let (($x12911 (or (or (= node_0x7fff9ee85590 (_ bv0 64)) (= (_ bv4 64) (_ bv0 64))) (and (distinct sdiv_0x7fff9ee85ba0 (_ bv0 64)) true))))
 (let (($x12912 (and (= sdiv_0x7fff9ee85ba0 (bvsdiv node_0x7fff9ee85590 (_ bv4 64))) $x12911)))
 (let (($x12914 (= node_0x7fff9ee85590 mul_0x7fff9ee85730)))
 (let (($x12923 (or (or (= (_ bv1461 64) (_ bv0 64)) (= node_0x7fff9ee85030 (_ bv0 64))) (and (distinct mul_0x7fff9ee85730 (_ bv0 64)) true))))
 (let (($x12924 (and (= mul_0x7fff9ee85730 (bvmul (_ bv1461 64) node_0x7fff9ee85030)) $x12923)))
 (let (($x12926 (= node_0x7fff9ee85030 sdiv_0x7fff9ee851d0)))
 (let (($x12935 (or (or (= node_0x7fff9ee84a80 (_ bv0 64)) (= (_ bv1461001 64) (_ bv0 64))) (and (distinct sdiv_0x7fff9ee851d0 (_ bv0 64)) true))))
 (let (($x12936 (and (= sdiv_0x7fff9ee851d0 (bvsdiv node_0x7fff9ee84a80 (_ bv1461001 64))) $x12935)))
 (let (($x12938 (= node_0x7fff9ee84a80 mul_0x7fff9ee84c20)))
 (let (($x12946 (or (or (= (_ bv4000 64) (_ bv0 64)) (= node_0x7fff9ee84570 (_ bv0 64))) (and (distinct mul_0x7fff9ee84c20 (_ bv0 64)) true))))
 (let (($x12947 (and (= mul_0x7fff9ee84c20 (bvmul (_ bv4000 64) node_0x7fff9ee84570)) $x12946)))
 (let (($x12897 (= add_0x7fff9ee84710 (bvadd node_0x7fff9ee84060 (_ bv1 64)))))
 (let (($x12948 (= node_0x7fff9ee84570 add_0x7fff9ee84710)))
 (and $x12948 $x12897 $x12947 $x12938 $x12936 $x12926 $x12924 $x12914 $x12912 $x12904 $x12903)))))))))))))))))
(assert
 (= node_0x7fff9ee85e20 sub_0x7fff9ee85fa0))
(assert
 (= add_0x7fff9ee864b0 (bvadd node_0x7fff9ee85e20 (_ bv31 64))))
(assert
 (= node_0x7fff9ee86310 add_0x7fff9ee864b0))
(assert
 (let (($x12989 (= sub_0x7fff9ee87e00 (bvsub node_0x7fff9ee86310 node_0x7fff9ee87840))))
 (let (($x12991 (= node_0x7fff9ee87840 sdiv_0x7fff9ee879e0)))
 (let (($x13000 (or (or (= node_0x7fff9ee873d0 (_ bv0 64)) (= (_ bv80 64) (_ bv0 64))) (and (distinct sdiv_0x7fff9ee879e0 (_ bv0 64)) true))))
 (let (($x13001 (and (= sdiv_0x7fff9ee879e0 (bvsdiv node_0x7fff9ee873d0 (_ bv80 64))) $x13000)))
 (let (($x13003 (= node_0x7fff9ee873d0 mul_0x7fff9ee87570)))
 (let (($x13012 (or (or (= (_ bv2447 64) (_ bv0 64)) (= node_0x7fff9ee86fb0 (_ bv0 64))) (and (distinct mul_0x7fff9ee87570 (_ bv0 64)) true))))
 (let (($x13013 (and (= mul_0x7fff9ee87570 (bvmul (_ bv2447 64) node_0x7fff9ee86fb0)) $x13012)))
 (let (($x13015 (= node_0x7fff9ee86fb0 sdiv_0x7fff9ee87150)))
 (let (($x13022 (or (or (= node_0x7fff9ee86820 (_ bv0 64)) (= (_ bv2447 64) (_ bv0 64))) (and (distinct sdiv_0x7fff9ee87150 (_ bv0 64)) true))))
 (let (($x13023 (and (= sdiv_0x7fff9ee87150 (bvsdiv node_0x7fff9ee86820 (_ bv2447 64))) $x13022)))
 (let (($x13031 (or (or (= (_ bv80 64) (_ bv0 64)) (= node_0x7fff9ee86310 (_ bv0 64))) (and (distinct mul_0x7fff9ee869c0 (_ bv0 64)) true))))
 (let (($x13032 (and (= mul_0x7fff9ee869c0 (bvmul (_ bv80 64) node_0x7fff9ee86310)) $x13031)))
 (let (($x13025 (= node_0x7fff9ee86820 mul_0x7fff9ee869c0)))
 (and $x13025 $x13032 $x13023 $x13015 $x13013 $x13003 $x13001 $x12991 $x12989)))))))))))))))
(assert
 (= node_0x7fff9ee87c60 sub_0x7fff9ee87e00))
(assert
 (= trunc_0x7fff9ee82c80 ((_ extract 31 0) node_0x7fff9ee87c60)))
(assert
 (= node_0x7fff9ee88030 trunc_0x7fff9ee82c80))
(assert
 (= StMem_0x7fff9ee882c0 node_0x7fff9ee88030))
(assert
 (= R0x7fff9ee816d0 (_ bv1 1)))
(assert
 (let (($x13072 (= LdMem_0x2275820f0 StMem_0x7fff9ee882c0)))
 (and (or (not (= R0x7fff9ee816d0 (_ bv1 1))) $x13072) $x13072)))
(assert
 (let (($x13076 (= node_0x227581f50 LdMem_0x2275820f0)))
 (and $x13076 $x13076)))
(assert
 (and (distinct node_0x227581f50 (_ bv0 32)) true))
(maximize mul_0x7fff9ee87570)
(maximize node_0x7fff9ee82db0)
(maximize node_0x7fff9ee836e0)
(minimize sdiv_0x7fff9ee82f50)
(minimize node_0x7fff9ee836e0)
(maximize node_0x7fff9ee85e20)
(minimize node_0x7fff9ee85e20)
(maximize R0x7fff9ee816d0)
(maximize sdiv_0x7fff9ee83de0)
(minimize carg_node_0x7fff9ee815c0)
(minimize mul_0x7fff9ee869c0)
(maximize node_0x7fff9ee84a80)
(maximize mul_0x7fff9ee85730)
(minimize add_0x7fff9ee83880)
(minimize node_0x7fff9ee85590)
(maximize add_0x7fff9ee82380)
(minimize node_0x227581f50)
(maximize sdiv_0x7fff9ee879e0)
(minimize node_0x7fff9ee83b50)
(minimize node_0x7fff9ee88030)
(minimize mul_0x7fff9ee85730)
(minimize node_0x7fff9ee86820)
(minimize LdMem_0x2275820f0)
(minimize node_0x7fff9ee84060)
(maximize sdiv_0x7fff9ee87150)
(maximize mul_0x7fff9ee84c20)
(maximize node_0x7fff9ee873d0)
(minimize node_0x7fff9ee87c60)
(minimize node_0x7fff9ee826f0)
(minimize sdiv_0x7fff9ee83de0)
(minimize sub_0x7fff9ee84200)
(minimize add_0x7fff9ee82380)
(minimize mul_0x7fff9ee87570)
(maximize carg_node_0x7fff9ee815c0)
(maximize node_0x7fff9ee88030)
(maximize node_0x7fff9ee82210)
(maximize trunc_0x7fff9ee82c80)
(maximize node_0x7fff9ee826f0)
(maximize sdiv_0x7fff9ee85ba0)
(minimize StMem_0x7fff9ee882c0)
(maximize mul_0x7fff9ee869c0)
(check-sat)
(get-objectives)
