; 
(set-info :status unknown)
(declare-fun carg_node_0x7fffac94d980 () (_ BitVec 64))
(declare-fun add_0x7fffac94e6f0 () (_ BitVec 64))
(declare-fun node_0x7fffac94e580 () (_ BitVec 64))
(declare-fun node_0x7fffac94fec0 () (_ BitVec 64))
(declare-fun sub_0x7fffac950570 () (_ BitVec 64))
(declare-fun sdiv_0x7fffac950150 () (_ BitVec 64))
(declare-fun node_0x7fffac94fa50 () (_ BitVec 64))
(declare-fun add_0x7fffac94fbf0 () (_ BitVec 64))
(declare-fun node_0x7fffac94f540 () (_ BitVec 64))
(declare-fun mul_0x7fffac94f6e0 () (_ BitVec 64))
(declare-fun node_0x7fffac94f120 () (_ BitVec 64))
(declare-fun sdiv_0x7fffac94f2c0 () (_ BitVec 64))
(declare-fun node_0x7fffac94ea60 () (_ BitVec 64))
(declare-fun mul_0x7fffac94ec00 () (_ BitVec 64))
(declare-fun node_0x7fffac9503d0 () (_ BitVec 64))
(declare-fun node_0x7fffac951d70 () (_ BitVec 64))
(declare-fun sub_0x7fffac952310 () (_ BitVec 64))
(declare-fun sdiv_0x7fffac951f10 () (_ BitVec 64))
(declare-fun node_0x7fffac951900 () (_ BitVec 64))
(declare-fun mul_0x7fffac951aa0 () (_ BitVec 64))
(declare-fun node_0x7fffac9513a0 () (_ BitVec 64))
(declare-fun sdiv_0x7fffac951540 () (_ BitVec 64))
(declare-fun node_0x7fffac950df0 () (_ BitVec 64))
(declare-fun mul_0x7fffac950f90 () (_ BitVec 64))
(declare-fun node_0x7fffac9508e0 () (_ BitVec 64))
(declare-fun add_0x7fffac950a80 () (_ BitVec 64))
(declare-fun node_0x7fffac952190 () (_ BitVec 64))
(declare-fun add_0x7fffac952820 () (_ BitVec 64))
(declare-fun node_0x7fffac952680 () (_ BitVec 64))
(declare-fun node_0x7fffac953bb0 () (_ BitVec 64))
(declare-fun sub_0x7fffac954580 () (_ BitVec 64))
(declare-fun sdiv_0x7fffac954160 () (_ BitVec 64))
(declare-fun node_0x7fffac953740 () (_ BitVec 64))
(declare-fun mul_0x7fffac9538e0 () (_ BitVec 64))
(declare-fun node_0x7fffac953320 () (_ BitVec 64))
(declare-fun sdiv_0x7fffac9534c0 () (_ BitVec 64))
(declare-fun node_0x7fffac952b90 () (_ BitVec 64))
(declare-fun mul_0x7fffac952d30 () (_ BitVec 64))
(declare-fun node_0x7fffac9543e0 () (_ BitVec 64))
(declare-fun trunc_0x7fffac94eff0 () (_ BitVec 32))
(declare-fun node_0x7fffac9547b0 () (_ BitVec 32))
(declare-fun StMem_0x7fffac954a40 () (_ BitVec 32))
(declare-fun R0x7fffac94da90 () (_ BitVec 1))
(declare-fun LdMem_0x11b495200 () (_ BitVec 32))
(declare-fun node_0x11b495060 () (_ BitVec 32))
(assert
 (= add_0x7fffac94e6f0 (bvadd carg_node_0x7fffac94d980 (_ bv68569 64))))
(assert
 (= node_0x7fffac94e580 add_0x7fffac94e6f0))
(assert
 (let (($x38 (= sub_0x7fffac950570 (bvsub node_0x7fffac94e580 node_0x7fffac94fec0))))
 (let (($x40 (= node_0x7fffac94fec0 sdiv_0x7fffac950150)))
 (let (($x50 (or (or (= node_0x7fffac94fa50 (_ bv0 64)) (= (_ bv4 64) (_ bv0 64))) (and (distinct sdiv_0x7fffac950150 (_ bv0 64)) true))))
 (let (($x51 (and (= sdiv_0x7fffac950150 (bvsdiv node_0x7fffac94fa50 (_ bv4 64))) $x50)))
 (let (($x53 (= node_0x7fffac94fa50 add_0x7fffac94fbf0)))
 (let (($x57 (= add_0x7fffac94fbf0 (bvadd node_0x7fffac94f540 (_ bv3 64)))))
 (let (($x59 (= node_0x7fffac94f540 mul_0x7fffac94f6e0)))
 (let (($x68 (or (or (= (_ bv146097 64) (_ bv0 64)) (= node_0x7fffac94f120 (_ bv0 64))) (and (distinct mul_0x7fffac94f6e0 (_ bv0 64)) true))))
 (let ((?x62 (bvmul (_ bv146097 64) node_0x7fffac94f120)))
 (let (($x63 (= mul_0x7fffac94f6e0 ?x62)))
 (let (($x69 (and $x63 $x68)))
 (let (($x71 (= node_0x7fffac94f120 sdiv_0x7fffac94f2c0)))
 (let (($x78 (or (or (= node_0x7fffac94ea60 (_ bv0 64)) (= (_ bv146097 64) (_ bv0 64))) (and (distinct sdiv_0x7fffac94f2c0 (_ bv0 64)) true))))
 (let (($x79 (and (= sdiv_0x7fffac94f2c0 (bvsdiv node_0x7fffac94ea60 (_ bv146097 64))) $x78)))
 (let (($x87 (or (or (= (_ bv4 64) (_ bv0 64)) (= node_0x7fffac94e580 (_ bv0 64))) (and (distinct mul_0x7fffac94ec00 (_ bv0 64)) true))))
 (let (($x88 (and (= mul_0x7fffac94ec00 (bvmul (_ bv4 64) node_0x7fffac94e580)) $x87)))
 (let (($x81 (= node_0x7fffac94ea60 mul_0x7fffac94ec00)))
 (and $x81 $x88 $x79 $x71 $x69 $x59 $x57 $x53 $x51 $x40 $x38)))))))))))))))))))
(assert
 (= node_0x7fffac9503d0 sub_0x7fffac950570))
(assert
 (let (($x12903 (= sub_0x7fffac952310 (bvsub node_0x7fffac9503d0 node_0x7fffac951d70))))
 (let (($x12904 (= node_0x7fffac951d70 sdiv_0x7fffac951f10)))
 (let (($x12911 (or (or (= node_0x7fffac951900 (_ bv0 64)) (= (_ bv4 64) (_ bv0 64))) (and (distinct sdiv_0x7fffac951f10 (_ bv0 64)) true))))
 (let (($x12912 (and (= sdiv_0x7fffac951f10 (bvsdiv node_0x7fffac951900 (_ bv4 64))) $x12911)))
 (let (($x12914 (= node_0x7fffac951900 mul_0x7fffac951aa0)))
 (let (($x12923 (or (or (= (_ bv1461 64) (_ bv0 64)) (= node_0x7fffac9513a0 (_ bv0 64))) (and (distinct mul_0x7fffac951aa0 (_ bv0 64)) true))))
 (let ((?x12917 (bvmul (_ bv1461 64) node_0x7fffac9513a0)))
 (let (($x12918 (= mul_0x7fffac951aa0 ?x12917)))
 (let (($x12924 (and $x12918 $x12923)))
 (let (($x12926 (= node_0x7fffac9513a0 sdiv_0x7fffac951540)))
 (let (($x12935 (or (or (= node_0x7fffac950df0 (_ bv0 64)) (= (_ bv1461001 64) (_ bv0 64))) (and (distinct sdiv_0x7fffac951540 (_ bv0 64)) true))))
 (let (($x12936 (and (= sdiv_0x7fffac951540 (bvsdiv node_0x7fffac950df0 (_ bv1461001 64))) $x12935)))
 (let (($x12938 (= node_0x7fffac950df0 mul_0x7fffac950f90)))
 (let (($x12946 (or (or (= (_ bv4000 64) (_ bv0 64)) (= node_0x7fffac9508e0 (_ bv0 64))) (and (distinct mul_0x7fffac950f90 (_ bv0 64)) true))))
 (let (($x12947 (and (= mul_0x7fffac950f90 (bvmul (_ bv4000 64) node_0x7fffac9508e0)) $x12946)))
 (let (($x12897 (= add_0x7fffac950a80 (bvadd node_0x7fffac9503d0 (_ bv1 64)))))
 (let (($x12948 (= node_0x7fffac9508e0 add_0x7fffac950a80)))
 (and $x12948 $x12897 $x12947 $x12938 $x12936 $x12926 $x12924 $x12914 $x12912 $x12904 $x12903)))))))))))))))))))
(assert
 (= node_0x7fffac952190 sub_0x7fffac952310))
(assert
 (= add_0x7fffac952820 (bvadd node_0x7fffac952190 (_ bv31 64))))
(assert
 (= node_0x7fffac952680 add_0x7fffac952820))
(assert
 (let (($x12989 (= sub_0x7fffac954580 (bvsub node_0x7fffac952680 node_0x7fffac953bb0))))
 (let (($x12991 (= node_0x7fffac953bb0 sdiv_0x7fffac954160)))
 (let (($x13000 (or (or (= node_0x7fffac953740 (_ bv0 64)) (= (_ bv80 64) (_ bv0 64))) (and (distinct sdiv_0x7fffac954160 (_ bv0 64)) true))))
 (let (($x13001 (and (= sdiv_0x7fffac954160 (bvsdiv node_0x7fffac953740 (_ bv80 64))) $x13000)))
 (let (($x13003 (= node_0x7fffac953740 mul_0x7fffac9538e0)))
 (let (($x13012 (or (or (= (_ bv2447 64) (_ bv0 64)) (= node_0x7fffac953320 (_ bv0 64))) (and (distinct mul_0x7fffac9538e0 (_ bv0 64)) true))))
 (let ((?x13006 (bvmul (_ bv2447 64) node_0x7fffac953320)))
 (let (($x13007 (= mul_0x7fffac9538e0 ?x13006)))
 (let (($x13013 (and $x13007 $x13012)))
 (let (($x13015 (= node_0x7fffac953320 sdiv_0x7fffac9534c0)))
 (let (($x13022 (or (or (= node_0x7fffac952b90 (_ bv0 64)) (= (_ bv2447 64) (_ bv0 64))) (and (distinct sdiv_0x7fffac9534c0 (_ bv0 64)) true))))
 (let (($x13023 (and (= sdiv_0x7fffac9534c0 (bvsdiv node_0x7fffac952b90 (_ bv2447 64))) $x13022)))
 (let (($x13031 (or (or (= (_ bv80 64) (_ bv0 64)) (= node_0x7fffac952680 (_ bv0 64))) (and (distinct mul_0x7fffac952d30 (_ bv0 64)) true))))
 (let (($x13032 (and (= mul_0x7fffac952d30 (bvmul (_ bv80 64) node_0x7fffac952680)) $x13031)))
 (let (($x13025 (= node_0x7fffac952b90 mul_0x7fffac952d30)))
 (and $x13025 $x13032 $x13023 $x13015 $x13013 $x13003 $x13001 $x12991 $x12989)))))))))))))))))
(assert
 (= node_0x7fffac9543e0 sub_0x7fffac954580))
(assert
 (= trunc_0x7fffac94eff0 ((_ extract 31 0) node_0x7fffac9543e0)))
(assert
 (= node_0x7fffac9547b0 trunc_0x7fffac94eff0))
(assert
 (= StMem_0x7fffac954a40 node_0x7fffac9547b0))
(assert
 (= R0x7fffac94da90 (_ bv1 1)))
(assert
 (let (($x13072 (= LdMem_0x11b495200 StMem_0x7fffac954a40)))
 (and (or (not (= R0x7fffac94da90 (_ bv1 1))) $x13072) $x13072)))
(assert
 (let (($x13076 (= node_0x11b495060 LdMem_0x11b495200)))
 (and $x13076 $x13076)))
(assert
 (and (distinct node_0x11b495060 (_ bv0 32)) true))
(minimize node_0x7fffac950df0)
(minimize node_0x11b495060)
(maximize node_0x7fffac94fec0)
(maximize node_0x7fffac9513a0)
(minimize node_0x7fffac951d70)
(maximize node_0x7fffac9547b0)
(minimize sdiv_0x7fffac950150)
(maximize node_0x7fffac9503d0)
(minimize sdiv_0x7fffac94f2c0)
(minimize node_0x7fffac94ea60)
(minimize add_0x7fffac94fbf0)
(minimize add_0x7fffac950a80)
(maximize mul_0x7fffac94f6e0)
(minimize node_0x7fffac953bb0)
(maximize sdiv_0x7fffac94f2c0)
(minimize StMem_0x7fffac954a40)
(minimize node_0x7fffac953320)
(minimize node_0x7fffac9547b0)
(maximize sdiv_0x7fffac954160)
(maximize node_0x7fffac950df0)
(maximize node_0x7fffac94f540)
(maximize node_0x7fffac952190)
(maximize trunc_0x7fffac94eff0)
(maximize node_0x11b495060)
(minimize node_0x7fffac952190)
(maximize node_0x7fffac953320)
(maximize node_0x7fffac94e580)
(minimize sdiv_0x7fffac951540)
(maximize add_0x7fffac94fbf0)
(minimize node_0x7fffac952b90)
(minimize node_0x7fffac9508e0)
(minimize sdiv_0x7fffac954160)
(minimize node_0x7fffac94f540)
(maximize StMem_0x7fffac954a40)
(minimize sdiv_0x7fffac9534c0)
(maximize mul_0x7fffac950f90)
(maximize sdiv_0x7fffac950150)
(minimize node_0x7fffac94fec0)
(minimize node_0x7fffac9503d0)
(maximize node_0x7fffac953740)
(maximize mul_0x7fffac952d30)
(maximize sub_0x7fffac952310)
(maximize node_0x7fffac94ea60)
(minimize R0x7fffac94da90)
(minimize node_0x7fffac953740)
(maximize sdiv_0x7fffac951540)
(minimize node_0x7fffac94fa50)
(minimize mul_0x7fffac94ec00)
(check-sat)
(get-objectives)
