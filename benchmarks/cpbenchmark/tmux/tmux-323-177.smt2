; benchmark generated from python API
(set-info :status unknown)
(declare-fun syscall_stub_newfstatat_83_64 () (_ BitVec 64))
(declare-fun mem_c0000f45_79_992 () (_ BitVec 992))
(declare-fun mem_c0001010_98_32 () (_ BitVec 32))
(declare-fun mem_ffffffffffffff6f_187_64 () (_ BitVec 64))
(declare-fun mem_fffff80000000000_206_64 () (_ BitVec 64))
(declare-fun mem_ffffffffffc00000_230_64 () (_ BitVec 64))
(declare-fun mem_fffffffffe000000_260_64 () (_ BitVec 64))
(declare-fun mem_fffffffffe000010_259_32 () (_ BitVec 32))
(declare-fun mem_ffffffffffc00010_229_32 () (_ BitVec 32))
(declare-fun mem_fffff80000000010_205_32 () (_ BitVec 32))
(declare-fun mem_ffffffffffffff7f_186_32 () (_ BitVec 32))
(assert
 (let ((?x47 ((_ extract 31 0) syscall_stub_newfstatat_83_64)))
 (let (($x52 (bvule ?x47 (_ bv4294963200 32))))
 (not $x52))))
(assert
 (let ((?x2189 ((_ extract 900 900) mem_c0000f45_79_992)))
 (= (_ bv0 1) ?x2189)))
(assert
 (let ((?x3699 ((_ extract 891 891) mem_c0000f45_79_992)))
 (= (_ bv0 1) ?x3699)))
(assert
 (let ((?x2374 ((_ extract 839 832) mem_c0000f45_79_992)))
 (let ((?x2364 ((_ extract 831 824) mem_c0000f45_79_992)))
 (let ((?x2349 ((_ extract 823 816) mem_c0000f45_79_992)))
 (let ((?x2357 ((_ extract 815 808) mem_c0000f45_79_992)))
 (let ((?x2362 ((_ extract 807 800) mem_c0000f45_79_992)))
 (let ((?x2363 ((_ extract 799 792) mem_c0000f45_79_992)))
 (let ((?x593 (concat (concat ((_ extract 783 776) mem_c0000f45_79_992) ((_ extract 791 784) mem_c0000f45_79_992)) ?x2363)))
 (let ((?x4215 (concat (concat (concat (concat ?x593 ?x2362) ?x2357) ?x2349) ?x2364)))
 (let ((?x3812 (concat ?x4215 ?x2374)))
 (let ((?x2427 ((_ extract 775 768) mem_c0000f45_79_992)))
 (let ((?x2419 ((_ extract 767 760) mem_c0000f45_79_992)))
 (let ((?x2429 ((_ extract 759 752) mem_c0000f45_79_992)))
 (let ((?x2417 ((_ extract 751 744) mem_c0000f45_79_992)))
 (let ((?x2410 ((_ extract 743 736) mem_c0000f45_79_992)))
 (let ((?x2411 ((_ extract 735 728) mem_c0000f45_79_992)))
 (let ((?x4124 (concat (concat ((_ extract 719 712) mem_c0000f45_79_992) ((_ extract 727 720) mem_c0000f45_79_992)) ?x2411)))
 (let ((?x4642 (concat ?x4124 ?x2410)))
 (let ((?x3823 (concat (concat (concat (concat ?x4642 ?x2417) ?x2429) ?x2419) ?x2427)))
 (bvule ?x3823 ?x3812))))))))))))))))))))
(assert
 (let ((?x8705 ((_ extract 888 888) mem_c0000f45_79_992)))
 (let (($x9102 (= (_ bv0 1) ?x8705)))
 (not $x9102))))
(assert
 (let ((?x14887 ((_ extract 327 320) mem_c0000f45_79_992)))
 (let ((?x14869 ((_ extract 319 312) mem_c0000f45_79_992)))
 (let ((?x14893 ((_ extract 311 304) mem_c0000f45_79_992)))
 (let ((?x14875 ((_ extract 303 296) mem_c0000f45_79_992)))
 (let ((?x14872 ((_ extract 295 288) mem_c0000f45_79_992)))
 (let ((?x14857 ((_ extract 287 280) mem_c0000f45_79_992)))
 (let ((?x15107 (concat (concat ((_ extract 271 264) mem_c0000f45_79_992) ((_ extract 279 272) mem_c0000f45_79_992)) ?x14857)))
 (let ((?x15071 (concat (concat (concat (concat (concat ?x15107 ?x14872) ?x14875) ?x14893) ?x14869) ?x14887)))
 (let ((?x15059 ((_ extract 199 192) mem_c0000f45_79_992)))
 (let ((?x15057 ((_ extract 191 184) mem_c0000f45_79_992)))
 (let ((?x15055 ((_ extract 183 176) mem_c0000f45_79_992)))
 (let ((?x15053 ((_ extract 175 168) mem_c0000f45_79_992)))
 (let ((?x15049 ((_ extract 167 160) mem_c0000f45_79_992)))
 (let ((?x15050 ((_ extract 159 152) mem_c0000f45_79_992)))
 (let ((?x21207 (concat (concat ((_ extract 143 136) mem_c0000f45_79_992) ((_ extract 151 144) mem_c0000f45_79_992)) ?x15050)))
 (let ((?x20542 (concat (concat (concat (concat (concat ?x21207 ?x15049) ?x15053) ?x15055) ?x15057) ?x15059)))
 (bvule ?x20542 ?x15071))))))))))))))))))
(assert
 (let ((?x11985 ((_ extract 135 128) mem_c0000f45_79_992)))
 (= (_ bv111 8) ?x11985)))
(assert
 (let ((?x13685 ((_ extract 127 120) mem_c0000f45_79_992)))
 (= (_ bv255 8) ?x13685)))
(assert
 (let ((?x13262 ((_ extract 119 112) mem_c0000f45_79_992)))
 (= (_ bv255 8) ?x13262)))
(assert
 (let ((?x13139 ((_ extract 111 104) mem_c0000f45_79_992)))
 (= (_ bv255 8) ?x13139)))
(assert
 (let ((?x12096 ((_ extract 103 96) mem_c0000f45_79_992)))
 (= (_ bv255 8) ?x12096)))
(assert
 (let ((?x12093 ((_ extract 95 88) mem_c0000f45_79_992)))
 (= (_ bv255 8) ?x12093)))
(assert
 (let ((?x12627 ((_ extract 87 80) mem_c0000f45_79_992)))
 (= (_ bv255 8) ?x12627)))
(assert
 (let ((?x12622 ((_ extract 79 72) mem_c0000f45_79_992)))
 (= (_ bv255 8) ?x12622)))
(assert
 (let ((?x2357 ((_ extract 815 808) mem_c0000f45_79_992)))
 (let ((?x2417 ((_ extract 751 744) mem_c0000f45_79_992)))
 (let (($x1690 (= ?x2417 ?x2357)))
 (let (($x3670 (not $x1690)))
 (let ((?x2362 ((_ extract 807 800) mem_c0000f45_79_992)))
 (let ((?x2410 ((_ extract 743 736) mem_c0000f45_79_992)))
 (let (($x1703 (= ?x2410 ?x2362)))
 (let (($x3664 (not $x1703)))
 (let ((?x2345 ((_ extract 783 776) mem_c0000f45_79_992)))
 (let ((?x2400 ((_ extract 719 712) mem_c0000f45_79_992)))
 (let (($x1701 (= ?x2400 ?x2345)))
 (let (($x3671 (not $x1701)))
 (let ((?x2363 ((_ extract 799 792) mem_c0000f45_79_992)))
 (let ((?x2411 ((_ extract 735 728) mem_c0000f45_79_992)))
 (let (($x1704 (= ?x2411 ?x2363)))
 (let (($x3672 (not $x1704)))
 (let ((?x2346 ((_ extract 791 784) mem_c0000f45_79_992)))
 (let ((?x2401 ((_ extract 727 720) mem_c0000f45_79_992)))
 (let (($x1693 (= ?x2401 ?x2346)))
 (let (($x4136 (not $x1693)))
 (let ((?x2364 ((_ extract 831 824) mem_c0000f45_79_992)))
 (let ((?x2419 ((_ extract 767 760) mem_c0000f45_79_992)))
 (let (($x1155 (= ?x2419 ?x2364)))
 (let (($x4137 (not $x1155)))
 (let ((?x2374 ((_ extract 839 832) mem_c0000f45_79_992)))
 (let ((?x2427 ((_ extract 775 768) mem_c0000f45_79_992)))
 (let (($x1152 (= ?x2427 ?x2374)))
 (let (($x4139 (not $x1152)))
 (let ((?x2349 ((_ extract 823 816) mem_c0000f45_79_992)))
 (let ((?x2429 ((_ extract 759 752) mem_c0000f45_79_992)))
 (let (($x1714 (= ?x2429 ?x2349)))
 (let (($x4539 (not $x1714)))
 (let (($x6038 (or $x4539 $x4139 $x4137 $x4136 $x3672 $x3671 $x3664 $x3670)))
 (let (($x9215 (not $x6038)))
 (let ((?x4533 (concat (concat (concat (concat (concat ?x2345 ?x2346) ?x2363) ?x2362) ?x2357) ?x2349)))
 (let ((?x4215 (concat ?x4533 ?x2364)))
 (let ((?x3812 (concat ?x4215 ?x2374)))
 (let ((?x3646 (bvmul (_ bv18446744073709551615 64) ?x3812)))
 (let ((?x3809 (concat (concat (concat (concat (concat ?x2400 ?x2401) ?x2411) ?x2410) ?x2417) ?x2429)))
 (let ((?x3823 (concat (concat ?x3809 ?x2419) ?x2427)))
 (let ((?x3827 (bvadd ?x3823 ?x3646)))
 (let ((?x2482 ((_ extract 63 63) ?x3827)))
 (let (($x2285 (= (_ bv1 1) ?x2482)))
 (or $x2285 $x9215)))))))))))))))))))))))))))))))))))))))))))))
(assert
 (= (_ bv0 32) mem_c0001010_98_32))
(assert
 (= (_ bv18446735277616529408 64) mem_ffffffffffffff6f_187_64))
(assert
 (= (_ bv18446744073705357312 64) mem_fffff80000000000_206_64))
(assert
 (= (_ bv18446744073675997184 64) mem_ffffffffffc00000_230_64))
(assert
 (= (_ bv0 64) mem_fffffffffe000000_260_64))
(assert
 (let ((?x15063 ((_ extract 711 704) mem_c0000f45_79_992)))
 (let ((?x15088 ((_ extract 703 696) mem_c0000f45_79_992)))
 (let ((?x15060 ((_ extract 695 688) mem_c0000f45_79_992)))
 (let ((?x15062 ((_ extract 687 680) mem_c0000f45_79_992)))
 (let ((?x15075 ((_ extract 679 672) mem_c0000f45_79_992)))
 (let ((?x15070 ((_ extract 671 664) mem_c0000f45_79_992)))
 (let ((?x29710 (concat (concat ((_ extract 655 648) mem_c0000f45_79_992) ((_ extract 663 656) mem_c0000f45_79_992)) ?x15070)))
 (let ((?x31872 (concat (concat (concat (concat (concat ?x29710 ?x15075) ?x15062) ?x15060) ?x15088) ?x15063)))
 (let ((?x2427 ((_ extract 775 768) mem_c0000f45_79_992)))
 (let ((?x2419 ((_ extract 767 760) mem_c0000f45_79_992)))
 (let ((?x2429 ((_ extract 759 752) mem_c0000f45_79_992)))
 (let ((?x2417 ((_ extract 751 744) mem_c0000f45_79_992)))
 (let ((?x2410 ((_ extract 743 736) mem_c0000f45_79_992)))
 (let ((?x2411 ((_ extract 735 728) mem_c0000f45_79_992)))
 (let ((?x4124 (concat (concat ((_ extract 719 712) mem_c0000f45_79_992) ((_ extract 727 720) mem_c0000f45_79_992)) ?x2411)))
 (let ((?x4642 (concat ?x4124 ?x2410)))
 (let ((?x3823 (concat (concat (concat (concat ?x4642 ?x2417) ?x2429) ?x2419) ?x2427)))
 (let ((?x114530 (bvsub ?x3823 ?x31872)))
 (let ((?x287551 ((_ extract 31 31) mem_fffffffffe000010_259_32)))
 (let ((?x456702 (concat (concat (concat (concat (concat ?x287551 ?x287551) ?x287551) ?x287551) ?x287551) ?x287551)))
 (let ((?x456883 (concat (concat (concat (concat (concat ?x456702 ?x287551) ?x287551) ?x287551) ?x287551) ?x287551)))
 (let ((?x456848 (concat (concat (concat (concat (concat ?x456883 ?x287551) ?x287551) ?x287551) ?x287551) ?x287551)))
 (let ((?x463662 (concat (concat (concat (concat (concat ?x456848 ?x287551) ?x287551) ?x287551) ?x287551) ?x287551)))
 (let ((?x460655 (concat (concat (concat (concat (concat ?x463662 ?x287551) ?x287551) ?x287551) ?x287551) ?x287551)))
 (let ((?x463519 (concat (concat (concat (concat (concat ?x460655 ?x287551) ?x287551) ?x287551) ?x287551) ?x287551)))
 (let ((?x462564 (concat (concat ?x463519 ?x287551) mem_fffffffffe000010_259_32)))
 (let ((?x139089 ((_ extract 31 31) mem_ffffffffffc00010_229_32)))
 (let ((?x288110 (concat (concat (concat (concat (concat ?x139089 ?x139089) ?x139089) ?x139089) ?x139089) ?x139089)))
 (let ((?x288115 (concat (concat (concat (concat (concat ?x288110 ?x139089) ?x139089) ?x139089) ?x139089) ?x139089)))
 (let ((?x288811 (concat (concat (concat (concat (concat ?x288115 ?x139089) ?x139089) ?x139089) ?x139089) ?x139089)))
 (let ((?x288308 (concat (concat (concat (concat (concat ?x288811 ?x139089) ?x139089) ?x139089) ?x139089) ?x139089)))
 (let ((?x288149 (concat (concat (concat (concat (concat ?x288308 ?x139089) ?x139089) ?x139089) ?x139089) ?x139089)))
 (let ((?x289025 (concat (concat (concat (concat (concat ?x288149 ?x139089) ?x139089) ?x139089) ?x139089) ?x139089)))
 (let ((?x288798 (concat (concat ?x289025 ?x139089) mem_ffffffffffc00010_229_32)))
 (let ((?x54743 ((_ extract 31 31) mem_fffff80000000010_205_32)))
 (let ((?x138865 (concat (concat (concat (concat (concat ?x54743 ?x54743) ?x54743) ?x54743) ?x54743) ?x54743)))
 (let ((?x138920 (concat (concat (concat (concat (concat ?x138865 ?x54743) ?x54743) ?x54743) ?x54743) ?x54743)))
 (let ((?x138382 (concat (concat (concat (concat (concat ?x138920 ?x54743) ?x54743) ?x54743) ?x54743) ?x54743)))
 (let ((?x138781 (concat (concat (concat (concat (concat ?x138382 ?x54743) ?x54743) ?x54743) ?x54743) ?x54743)))
 (let ((?x138771 (concat (concat (concat (concat (concat ?x138781 ?x54743) ?x54743) ?x54743) ?x54743) ?x54743)))
 (let ((?x136122 (concat (concat (concat (concat (concat ?x138771 ?x54743) ?x54743) ?x54743) ?x54743) ?x54743)))
 (let ((?x138160 (concat (concat ?x136122 ?x54743) mem_fffff80000000010_205_32)))
 (let ((?x67880 ((_ extract 31 31) mem_ffffffffffffff7f_186_32)))
 (let ((?x99726 (concat (concat (concat (concat (concat ?x67880 ?x67880) ?x67880) ?x67880) ?x67880) ?x67880)))
 (let ((?x99729 (concat (concat (concat (concat (concat ?x99726 ?x67880) ?x67880) ?x67880) ?x67880) ?x67880)))
 (let ((?x99734 (concat (concat (concat (concat (concat ?x99729 ?x67880) ?x67880) ?x67880) ?x67880) ?x67880)))
 (let ((?x99739 (concat (concat (concat (concat (concat ?x99734 ?x67880) ?x67880) ?x67880) ?x67880) ?x67880)))
 (let ((?x99744 (concat (concat (concat (concat (concat ?x99739 ?x67880) ?x67880) ?x67880) ?x67880) ?x67880)))
 (let ((?x99749 (concat (concat (concat (concat (concat ?x99744 ?x67880) ?x67880) ?x67880) ?x67880) ?x67880)))
 (let ((?x99751 (concat (concat ?x99749 ?x67880) mem_ffffffffffffff7f_186_32)))
 (let ((?x14887 ((_ extract 327 320) mem_c0000f45_79_992)))
 (let ((?x14869 ((_ extract 319 312) mem_c0000f45_79_992)))
 (let ((?x14893 ((_ extract 311 304) mem_c0000f45_79_992)))
 (let ((?x14875 ((_ extract 303 296) mem_c0000f45_79_992)))
 (let ((?x14872 ((_ extract 295 288) mem_c0000f45_79_992)))
 (let ((?x14857 ((_ extract 287 280) mem_c0000f45_79_992)))
 (let ((?x15107 (concat (concat ((_ extract 271 264) mem_c0000f45_79_992) ((_ extract 279 272) mem_c0000f45_79_992)) ?x14857)))
 (let ((?x15071 (concat (concat (concat (concat (concat ?x15107 ?x14872) ?x14875) ?x14893) ?x14869) ?x14887)))
 (let ((?x96985 (bvmul (_ bv18446744073709551615 64) ?x15071)))
 (let ((?x15059 ((_ extract 199 192) mem_c0000f45_79_992)))
 (let ((?x15057 ((_ extract 191 184) mem_c0000f45_79_992)))
 (let ((?x15055 ((_ extract 183 176) mem_c0000f45_79_992)))
 (let ((?x15053 ((_ extract 175 168) mem_c0000f45_79_992)))
 (let ((?x15049 ((_ extract 167 160) mem_c0000f45_79_992)))
 (let ((?x15050 ((_ extract 159 152) mem_c0000f45_79_992)))
 (let ((?x21207 (concat (concat ((_ extract 143 136) mem_c0000f45_79_992) ((_ extract 151 144) mem_c0000f45_79_992)) ?x15050)))
 (let ((?x20542 (concat (concat (concat (concat (concat ?x21207 ?x15049) ?x15053) ?x15055) ?x15057) ?x15059)))
 (let ((?x97029 (bvadd ?x20542 ?x96985)))
 (let (($x99752 (bvsle ?x97029 ?x99751)))
 (let ((?x99753 (ite $x99752 ?x97029 ?x99751)))
 (let (($x138763 (bvsle ?x99753 ?x138160)))
 (let ((?x137322 (ite $x138763 ?x99753 ?x138160)))
 (let (($x288854 (bvsle ?x137322 ?x288798)))
 (let ((?x288619 (ite $x288854 ?x137322 ?x288798)))
 (let (($x457145 (bvsle ?x288619 ?x462564)))
 (let ((?x457468 (ite $x457145 ?x288619 ?x462564)))
 (let ((?x47620 (bvsub ?x20542 ?x15071)))
 (let ((?x779356 (bvsub ?x47620 ?x457468)))
 (bvule ?x779356 ?x114530))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x287551 ((_ extract 31 31) mem_fffffffffe000010_259_32)))
 (let ((?x456702 (concat (concat (concat (concat (concat ?x287551 ?x287551) ?x287551) ?x287551) ?x287551) ?x287551)))
 (let ((?x456883 (concat (concat (concat (concat (concat ?x456702 ?x287551) ?x287551) ?x287551) ?x287551) ?x287551)))
 (let ((?x456848 (concat (concat (concat (concat (concat ?x456883 ?x287551) ?x287551) ?x287551) ?x287551) ?x287551)))
 (let ((?x463662 (concat (concat (concat (concat (concat ?x456848 ?x287551) ?x287551) ?x287551) ?x287551) ?x287551)))
 (let ((?x460655 (concat (concat (concat (concat (concat ?x463662 ?x287551) ?x287551) ?x287551) ?x287551) ?x287551)))
 (let ((?x463519 (concat (concat (concat (concat (concat ?x460655 ?x287551) ?x287551) ?x287551) ?x287551) ?x287551)))
 (let ((?x462564 (concat (concat ?x463519 ?x287551) mem_fffffffffe000010_259_32)))
 (let ((?x139089 ((_ extract 31 31) mem_ffffffffffc00010_229_32)))
 (let ((?x288110 (concat (concat (concat (concat (concat ?x139089 ?x139089) ?x139089) ?x139089) ?x139089) ?x139089)))
 (let ((?x288115 (concat (concat (concat (concat (concat ?x288110 ?x139089) ?x139089) ?x139089) ?x139089) ?x139089)))
 (let ((?x288811 (concat (concat (concat (concat (concat ?x288115 ?x139089) ?x139089) ?x139089) ?x139089) ?x139089)))
 (let ((?x288308 (concat (concat (concat (concat (concat ?x288811 ?x139089) ?x139089) ?x139089) ?x139089) ?x139089)))
 (let ((?x288149 (concat (concat (concat (concat (concat ?x288308 ?x139089) ?x139089) ?x139089) ?x139089) ?x139089)))
 (let ((?x289025 (concat (concat (concat (concat (concat ?x288149 ?x139089) ?x139089) ?x139089) ?x139089) ?x139089)))
 (let ((?x288798 (concat (concat ?x289025 ?x139089) mem_ffffffffffc00010_229_32)))
 (let ((?x54743 ((_ extract 31 31) mem_fffff80000000010_205_32)))
 (let ((?x138865 (concat (concat (concat (concat (concat ?x54743 ?x54743) ?x54743) ?x54743) ?x54743) ?x54743)))
 (let ((?x138920 (concat (concat (concat (concat (concat ?x138865 ?x54743) ?x54743) ?x54743) ?x54743) ?x54743)))
 (let ((?x138382 (concat (concat (concat (concat (concat ?x138920 ?x54743) ?x54743) ?x54743) ?x54743) ?x54743)))
 (let ((?x138781 (concat (concat (concat (concat (concat ?x138382 ?x54743) ?x54743) ?x54743) ?x54743) ?x54743)))
 (let ((?x138771 (concat (concat (concat (concat (concat ?x138781 ?x54743) ?x54743) ?x54743) ?x54743) ?x54743)))
 (let ((?x136122 (concat (concat (concat (concat (concat ?x138771 ?x54743) ?x54743) ?x54743) ?x54743) ?x54743)))
 (let ((?x138160 (concat (concat ?x136122 ?x54743) mem_fffff80000000010_205_32)))
 (let ((?x67880 ((_ extract 31 31) mem_ffffffffffffff7f_186_32)))
 (let ((?x99726 (concat (concat (concat (concat (concat ?x67880 ?x67880) ?x67880) ?x67880) ?x67880) ?x67880)))
 (let ((?x99729 (concat (concat (concat (concat (concat ?x99726 ?x67880) ?x67880) ?x67880) ?x67880) ?x67880)))
 (let ((?x99734 (concat (concat (concat (concat (concat ?x99729 ?x67880) ?x67880) ?x67880) ?x67880) ?x67880)))
 (let ((?x99739 (concat (concat (concat (concat (concat ?x99734 ?x67880) ?x67880) ?x67880) ?x67880) ?x67880)))
 (let ((?x99744 (concat (concat (concat (concat (concat ?x99739 ?x67880) ?x67880) ?x67880) ?x67880) ?x67880)))
 (let ((?x99749 (concat (concat (concat (concat (concat ?x99744 ?x67880) ?x67880) ?x67880) ?x67880) ?x67880)))
 (let ((?x99751 (concat (concat ?x99749 ?x67880) mem_ffffffffffffff7f_186_32)))
 (let ((?x14887 ((_ extract 327 320) mem_c0000f45_79_992)))
 (let ((?x14869 ((_ extract 319 312) mem_c0000f45_79_992)))
 (let ((?x14893 ((_ extract 311 304) mem_c0000f45_79_992)))
 (let ((?x14875 ((_ extract 303 296) mem_c0000f45_79_992)))
 (let ((?x14872 ((_ extract 295 288) mem_c0000f45_79_992)))
 (let ((?x14857 ((_ extract 287 280) mem_c0000f45_79_992)))
 (let ((?x15107 (concat (concat ((_ extract 271 264) mem_c0000f45_79_992) ((_ extract 279 272) mem_c0000f45_79_992)) ?x14857)))
 (let ((?x15071 (concat (concat (concat (concat (concat ?x15107 ?x14872) ?x14875) ?x14893) ?x14869) ?x14887)))
 (let ((?x96985 (bvmul (_ bv18446744073709551615 64) ?x15071)))
 (let ((?x15059 ((_ extract 199 192) mem_c0000f45_79_992)))
 (let ((?x15057 ((_ extract 191 184) mem_c0000f45_79_992)))
 (let ((?x15055 ((_ extract 183 176) mem_c0000f45_79_992)))
 (let ((?x15053 ((_ extract 175 168) mem_c0000f45_79_992)))
 (let ((?x15049 ((_ extract 167 160) mem_c0000f45_79_992)))
 (let ((?x15050 ((_ extract 159 152) mem_c0000f45_79_992)))
 (let ((?x21207 (concat (concat ((_ extract 143 136) mem_c0000f45_79_992) ((_ extract 151 144) mem_c0000f45_79_992)) ?x15050)))
 (let ((?x20542 (concat (concat (concat (concat (concat ?x21207 ?x15049) ?x15053) ?x15055) ?x15057) ?x15059)))
 (let ((?x97029 (bvadd ?x20542 ?x96985)))
 (let (($x99752 (bvsle ?x97029 ?x99751)))
 (let ((?x99753 (ite $x99752 ?x97029 ?x99751)))
 (let (($x138763 (bvsle ?x99753 ?x138160)))
 (let ((?x137322 (ite $x138763 ?x99753 ?x138160)))
 (let (($x288854 (bvsle ?x137322 ?x288798)))
 (let ((?x288619 (ite $x288854 ?x137322 ?x288798)))
 (let (($x457145 (bvsle ?x288619 ?x462564)))
 (let ((?x457468 (ite $x457145 ?x288619 ?x462564)))
 (let ((?x1177616 ((_ extract 63 63) ?x457468)))
 (= (_ bv0 1) ?x1177616)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert
 (let ((?x287551 ((_ extract 31 31) mem_fffffffffe000010_259_32)))
 (let ((?x456702 (concat (concat (concat (concat (concat ?x287551 ?x287551) ?x287551) ?x287551) ?x287551) ?x287551)))
 (let ((?x456883 (concat (concat (concat (concat (concat ?x456702 ?x287551) ?x287551) ?x287551) ?x287551) ?x287551)))
 (let ((?x456848 (concat (concat (concat (concat (concat ?x456883 ?x287551) ?x287551) ?x287551) ?x287551) ?x287551)))
 (let ((?x463662 (concat (concat (concat (concat (concat ?x456848 ?x287551) ?x287551) ?x287551) ?x287551) ?x287551)))
 (let ((?x460655 (concat (concat (concat (concat (concat ?x463662 ?x287551) ?x287551) ?x287551) ?x287551) ?x287551)))
 (let ((?x463519 (concat (concat (concat (concat (concat ?x460655 ?x287551) ?x287551) ?x287551) ?x287551) ?x287551)))
 (let ((?x462564 (concat (concat ?x463519 ?x287551) mem_fffffffffe000010_259_32)))
 (let ((?x139089 ((_ extract 31 31) mem_ffffffffffc00010_229_32)))
 (let ((?x288110 (concat (concat (concat (concat (concat ?x139089 ?x139089) ?x139089) ?x139089) ?x139089) ?x139089)))
 (let ((?x288115 (concat (concat (concat (concat (concat ?x288110 ?x139089) ?x139089) ?x139089) ?x139089) ?x139089)))
 (let ((?x288811 (concat (concat (concat (concat (concat ?x288115 ?x139089) ?x139089) ?x139089) ?x139089) ?x139089)))
 (let ((?x288308 (concat (concat (concat (concat (concat ?x288811 ?x139089) ?x139089) ?x139089) ?x139089) ?x139089)))
 (let ((?x288149 (concat (concat (concat (concat (concat ?x288308 ?x139089) ?x139089) ?x139089) ?x139089) ?x139089)))
 (let ((?x289025 (concat (concat (concat (concat (concat ?x288149 ?x139089) ?x139089) ?x139089) ?x139089) ?x139089)))
 (let ((?x288798 (concat (concat ?x289025 ?x139089) mem_ffffffffffc00010_229_32)))
 (let ((?x54743 ((_ extract 31 31) mem_fffff80000000010_205_32)))
 (let ((?x138865 (concat (concat (concat (concat (concat ?x54743 ?x54743) ?x54743) ?x54743) ?x54743) ?x54743)))
 (let ((?x138920 (concat (concat (concat (concat (concat ?x138865 ?x54743) ?x54743) ?x54743) ?x54743) ?x54743)))
 (let ((?x138382 (concat (concat (concat (concat (concat ?x138920 ?x54743) ?x54743) ?x54743) ?x54743) ?x54743)))
 (let ((?x138781 (concat (concat (concat (concat (concat ?x138382 ?x54743) ?x54743) ?x54743) ?x54743) ?x54743)))
 (let ((?x138771 (concat (concat (concat (concat (concat ?x138781 ?x54743) ?x54743) ?x54743) ?x54743) ?x54743)))
 (let ((?x136122 (concat (concat (concat (concat (concat ?x138771 ?x54743) ?x54743) ?x54743) ?x54743) ?x54743)))
 (let ((?x138160 (concat (concat ?x136122 ?x54743) mem_fffff80000000010_205_32)))
 (let ((?x67880 ((_ extract 31 31) mem_ffffffffffffff7f_186_32)))
 (let ((?x99726 (concat (concat (concat (concat (concat ?x67880 ?x67880) ?x67880) ?x67880) ?x67880) ?x67880)))
 (let ((?x99729 (concat (concat (concat (concat (concat ?x99726 ?x67880) ?x67880) ?x67880) ?x67880) ?x67880)))
 (let ((?x99734 (concat (concat (concat (concat (concat ?x99729 ?x67880) ?x67880) ?x67880) ?x67880) ?x67880)))
 (let ((?x99739 (concat (concat (concat (concat (concat ?x99734 ?x67880) ?x67880) ?x67880) ?x67880) ?x67880)))
 (let ((?x99744 (concat (concat (concat (concat (concat ?x99739 ?x67880) ?x67880) ?x67880) ?x67880) ?x67880)))
 (let ((?x99749 (concat (concat (concat (concat (concat ?x99744 ?x67880) ?x67880) ?x67880) ?x67880) ?x67880)))
 (let ((?x99751 (concat (concat ?x99749 ?x67880) mem_ffffffffffffff7f_186_32)))
 (let ((?x14887 ((_ extract 327 320) mem_c0000f45_79_992)))
 (let ((?x14869 ((_ extract 319 312) mem_c0000f45_79_992)))
 (let ((?x14893 ((_ extract 311 304) mem_c0000f45_79_992)))
 (let ((?x14875 ((_ extract 303 296) mem_c0000f45_79_992)))
 (let ((?x14872 ((_ extract 295 288) mem_c0000f45_79_992)))
 (let ((?x14857 ((_ extract 287 280) mem_c0000f45_79_992)))
 (let ((?x15107 (concat (concat ((_ extract 271 264) mem_c0000f45_79_992) ((_ extract 279 272) mem_c0000f45_79_992)) ?x14857)))
 (let ((?x15071 (concat (concat (concat (concat (concat ?x15107 ?x14872) ?x14875) ?x14893) ?x14869) ?x14887)))
 (let ((?x96985 (bvmul (_ bv18446744073709551615 64) ?x15071)))
 (let ((?x15059 ((_ extract 199 192) mem_c0000f45_79_992)))
 (let ((?x15057 ((_ extract 191 184) mem_c0000f45_79_992)))
 (let ((?x15055 ((_ extract 183 176) mem_c0000f45_79_992)))
 (let ((?x15053 ((_ extract 175 168) mem_c0000f45_79_992)))
 (let ((?x15049 ((_ extract 167 160) mem_c0000f45_79_992)))
 (let ((?x15050 ((_ extract 159 152) mem_c0000f45_79_992)))
 (let ((?x21207 (concat (concat ((_ extract 143 136) mem_c0000f45_79_992) ((_ extract 151 144) mem_c0000f45_79_992)) ?x15050)))
 (let ((?x20542 (concat (concat (concat (concat (concat ?x21207 ?x15049) ?x15053) ?x15055) ?x15057) ?x15059)))
 (let ((?x97029 (bvadd ?x20542 ?x96985)))
 (let (($x99752 (bvsle ?x97029 ?x99751)))
 (let ((?x99753 (ite $x99752 ?x97029 ?x99751)))
 (let (($x138763 (bvsle ?x99753 ?x138160)))
 (let ((?x137322 (ite $x138763 ?x99753 ?x138160)))
 (let (($x288854 (bvsle ?x137322 ?x288798)))
 (let ((?x288619 (ite $x288854 ?x137322 ?x288798)))
 (let (($x457145 (bvsle ?x288619 ?x462564)))
 (let ((?x457468 (ite $x457145 ?x288619 ?x462564)))
 (let ((?x1385436 (bvmul (_ bv18446744073709551615 64) ?x457468)))
 (let ((?x1385490 (bvadd ?x97029 ?x1385436)))
 (and (distinct (_ bv0 64) ?x1385490) true))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(maximize mem_ffffffffffffff7f_186_32)
(minimize mem_fffff80000000010_205_32)
(minimize mem_ffffffffffffff6f_187_64)
(maximize mem_ffffffffffffff6f_187_64)
(minimize mem_fffffffffe000000_260_64)
(maximize mem_ffffffffffc00000_230_64)
(minimize mem_fffffffffe000010_259_32)
(maximize syscall_stub_newfstatat_83_64)
(minimize mem_ffffffffffc00010_229_32)
(minimize mem_c0001010_98_32)
(maximize mem_fffffffffe000010_259_32)
(maximize mem_ffffffffffc00010_229_32)
(maximize mem_fffffffffe000000_260_64)
(maximize mem_c0001010_98_32)
(check-sat)
(get-objectives)
